// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using projectMigration.Models;

namespace projectMigration.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20210818081719_columnadded")]
    partial class columnadded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("EFCOREPOC")
                .HasAnnotation("Relational:Collation", "USING_NLS_COMP")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence("FINS_AUDITLOGSEQ");

            modelBuilder.HasSequence("FINS_AUTHORIZATIONMASTER_SEQ");

            modelBuilder.HasSequence("FINS_BULKDEALERDETAILS_SEQ");

            modelBuilder.HasSequence("PRODUCTPARAMATERID");

            modelBuilder.HasSequence("SEQ_3IN1APP_REQ");

            modelBuilder.HasSequence("SEQ_3IN1APP_RES");

            modelBuilder.HasSequence("SEQ_3IN1APPTOKEN");

            modelBuilder.HasSequence("SEQ_3IN1CUS_REQ");

            modelBuilder.HasSequence("SEQ_3IN1CUS_RES");

            modelBuilder.HasSequence("SEQ_AUTHMASTER");

            modelBuilder.HasSequence("SEQ_CANCELLATION_ID");

            modelBuilder.HasSequence("SEQ_DSHORTSEQ");

            modelBuilder.HasSequence("SEQ_GENERATERRN");

            modelBuilder.HasSequence("SEQ_REQUESTAUDIT");

            modelBuilder.HasSequence("SEQ_RESPONSEAUDIT");

            modelBuilder.HasSequence("SEQ_STAN");

            modelBuilder.HasSequence("SQEACCPRODMAPPING");

            modelBuilder.HasSequence("SYSTEMPARAMATERID");

            modelBuilder.Entity("projectMigration.Models.Fins3in1apprequest", b =>
                {
                    b.Property<DateTime?>("Addedon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON")
                        .HasDefaultValueSql("sysdate\n   ");

                    b.Property<string>("AuthRrnnumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_RRNNUMBER");

                    b.Property<decimal?>("AuthSeqid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AUTH_SEQID");

                    b.Property<decimal?>("Reqseq")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REQSEQ");

                    b.Property<string>("Requestpacket")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("REQUESTPACKET");

                    b.Property<string>("Source")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("SOURCE");

                    b.Property<string>("respcode")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.ToTable("FINS_3IN1APPREQUEST");
                });

            modelBuilder.Entity("projectMigration.Models.Fins3in1appresponse", b =>
                {
                    b.Property<DateTime?>("Addedon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON")
                        .HasDefaultValueSql("sysdate");

                    b.Property<string>("Alertsmsflag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("ALERTSMSFLAG");

                    b.Property<decimal?>("Reqseq")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REQSEQ");

                    b.Property<string>("Responsecode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("RESPONSECODE");

                    b.Property<string>("Responsedesc")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("RESPONSEDESC");

                    b.Property<string>("Responsepacket")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("RESPONSEPACKET");

                    b.Property<decimal?>("Resseq")
                        .HasColumnType("NUMBER")
                        .HasColumnName("RESSEQ");

                    b.HasIndex(new[] { "Addedon" }, "IDX_3IN1APPRESPONSE_DT");

                    b.HasIndex(new[] { "Alertsmsflag" }, "IDX_3IN1APPRESPONSE_SMS");

                    b.ToTable("FINS_3IN1APPRESPONSE");
                });

            modelBuilder.Entity("projectMigration.Models.Fins3in1apptoken", b =>
                {
                    b.Property<DateTime?>("Addedon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON")
                        .HasDefaultValueSql("sysdate\n   ");

                    b.Property<decimal?>("Expiresin")
                        .HasColumnType("NUMBER")
                        .HasColumnName("EXPIRESIN");

                    b.Property<string>("Response")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("RESPONSE");

                    b.Property<decimal?>("Seqno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("SEQNO")
                        .HasDefaultValueSql("\"EFCOREPOC\".\"SEQ_3IN1APPTOKEN\".\"NEXTVAL\"");

                    b.Property<string>("Source")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("SOURCE");

                    b.Property<string>("Token")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("TOKEN");

                    b.ToTable("FINS_3IN1APPTOKEN");
                });

            modelBuilder.Entity("projectMigration.Models.Fins3in1cusrequest", b =>
                {
                    b.Property<DateTime?>("Addedon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON")
                        .HasDefaultValueSql("sysdate\n   ");

                    b.Property<string>("Keydata")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("KEYDATA");

                    b.Property<decimal?>("Reqseq")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REQSEQ");

                    b.Property<string>("Requestpacket")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("REQUESTPACKET");

                    b.Property<string>("Source")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("SOURCE");

                    b.ToTable("FINS_3IN1CUSREQUEST");
                });

            modelBuilder.Entity("projectMigration.Models.Fins3in1cusresponse", b =>
                {
                    b.Property<DateTime?>("Addedon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON")
                        .HasDefaultValueSql("sysdate");

                    b.Property<string>("Alertsmsflag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("ALERTSMSFLAG");

                    b.Property<decimal?>("Reqseq")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REQSEQ");

                    b.Property<string>("Responsecode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("RESPONSECODE");

                    b.Property<string>("Responsedesc")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("RESPONSEDESC");

                    b.Property<string>("Responsepacket")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("RESPONSEPACKET");

                    b.Property<decimal?>("Resseq")
                        .HasColumnType("NUMBER")
                        .HasColumnName("RESSEQ");

                    b.Property<decimal?>("Retrycount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("RETRYCOUNT");

                    b.HasIndex(new[] { "Addedon" }, "IDX_3IN1CUSRESPONSE_DT");

                    b.HasIndex(new[] { "Alertsmsflag" }, "IDX_3IN1CUSRESPONSE_SMS");

                    b.ToTable("FINS_3IN1CUSRESPONSE");
                });

            modelBuilder.Entity("projectMigration.Models.FinsAccountmaster", b =>
                {
                    b.Property<string>("AccId")
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(22)")
                        .HasColumnName("ACC_ID");

                    b.Property<long?>("AccAdjLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_ADJ_LIMIT");

                    b.Property<DateTime?>("AccAdjLimitDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_ADJ_LIMIT_DATE");

                    b.Property<string>("AccBankcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("ACC_BANKCODE");

                    b.Property<long?>("AccBestLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_BEST_LIMIT");

                    b.Property<DateTime?>("AccBlockClassModifyDt")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_BLOCK_CLASS_MODIFY_DT");

                    b.Property<string>("AccBlockClassification")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("ACC_BLOCK_CLASSIFICATION");

                    b.Property<DateTime?>("AccCreationDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_CREATION_DATE");

                    b.Property<string>("AccCreditLimUpdSrc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("ACC_CREDIT_LIM_UPD_SRC");

                    b.Property<long?>("AccCreditLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_CREDIT_LIMIT");

                    b.Property<DateTime?>("AccCreditLimtChgDt")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_CREDIT_LIMT_CHG_DT");

                    b.Property<string>("AccCustId")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("ACC_CUST_ID");

                    b.Property<DateTime?>("AccEndDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_END_DATE");

                    b.Property<DateTime?>("AccFirstTxnDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_FIRST_TXN_DATE");

                    b.Property<long?>("AccFirstTxnLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_FIRST_TXN_LIMIT");

                    b.Property<string>("AccFirstTxnRrn")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(14)")
                        .HasColumnName("ACC_FIRST_TXN_RRN");

                    b.Property<DateTime?>("AccIvrUpd")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_IVR_UPD");

                    b.Property<DateTime?>("AccLastAuthDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_LAST_AUTH_DATE");

                    b.Property<DateTime?>("AccLastModifyDtBfl")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_LAST_MODIFY_DT_BFL");

                    b.Property<DateTime?>("AccLastModifyDtWl")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_LAST_MODIFY_DT_WL");

                    b.Property<string>("AccManualBlockCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(6)")
                        .HasColumnName("ACC_MANUAL_BLOCK_CODE")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("AccManualBlockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_MANUAL_BLOCK_DATE");

                    b.Property<DateTime?>("AccManualUnblockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_MANUAL_UNBLOCK_DATE");

                    b.Property<string>("AccManualUnblockReason")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("ACC_MANUAL_UNBLOCK_REASON");

                    b.Property<string>("AccNameChmpChllg")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ACC_NAME_CHMP_CHLLG");

                    b.Property<string>("AccNoOfAddonCards")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("ACC_NO_OF_ADDON_CARDS");

                    b.Property<string>("AccOldestActPriCard")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(16)")
                        .HasColumnName("ACC_OLDEST_ACT_PRI_CARD");

                    b.Property<DateTime?>("AccProcDevEndDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_PROC_DEV_END_DATE");

                    b.Property<string>("AccProcDevFlag")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("ACC_PROC_DEV_FLAG");

                    b.Property<DateTime?>("AccStartDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_START_DATE");

                    b.Property<string>("AccSystemBlockCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(6)")
                        .HasColumnName("ACC_SYSTEM_BLOCK_CODE")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("AccSystemBlockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_SYSTEM_BLOCK_DATE");

                    b.Property<DateTime?>("AccSystemUnblockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_SYSTEM_UNBLOCK_DATE");

                    b.Property<string>("AccSystemUnblockReason")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("ACC_SYSTEM_UNBLOCK_REASON");

                    b.Property<long?>("AccTempLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_TEMP_LIMIT");

                    b.Property<DateTime?>("AccTempLimitEndDt")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_TEMP_LIMIT_END_DT");

                    b.Property<DateTime?>("AccTempLimitStartDt")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_TEMP_LIMIT_START_DT");

                    b.Property<long?>("AccTotalAuthBlocked")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_TOTAL_AUTH_BLOCKED");

                    b.Property<long?>("AccTotalLoanBlocked")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_TOTAL_LOAN_BLOCKED");

                    b.Property<string>("AccTotalNoOfCards")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("ACC_TOTAL_NO_OF_CARDS");

                    b.Property<string>("AccType")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("ACC_TYPE");

                    b.Property<string>("AccVipNonvipFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("ACC_VIP_NONVIP_FLAG");

                    b.HasKey("AccId")
                        .HasName("PK_ACC_ID");

                    b.HasIndex(new[] { "AccCustId" }, "IDX_ACCOUNTCUSTID");

                    b.ToTable("FINS_ACCOUNTMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsAccprodmapping", b =>
                {
                    b.Property<string>("Accounttype")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("ACCOUNTTYPE");

                    b.Property<decimal?>("Addedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<decimal?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("ID")
                        .HasDefaultValueSql("\"EFCOREPOC\".\"SQEACCPRODMAPPING\".\"NEXTVAL\"");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("IPADDRESS");

                    b.Property<decimal?>("Modifyby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODIFYBY");

                    b.Property<DateTime?>("Modifyon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFYON");

                    b.Property<decimal?>("Priority")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PRIORITY");

                    b.Property<string>("Product")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PRODUCT");

                    b.Property<string>("Status")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("STATUS");

                    b.ToTable("FINS_ACCPRODMAPPING");
                });

            modelBuilder.Entity("projectMigration.Models.FinsAcqproductparammaster", b =>
                {
                    b.Property<string>("Acqchannel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("ACQCHANNEL");

                    b.Property<string>("Addedby")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Cancelotpbypass")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CANCELOTPBYPASS");

                    b.Property<string>("Modifiedby")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<DateTime?>("Modifiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON");

                    b.Property<string>("Otpbypass")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("OTPBYPASS");

                    b.Property<string>("Productid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("PRODUCTID");

                    b.Property<string>("Productname")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("PRODUCTNAME");

                    b.Property<decimal?>("Seq")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SEQ");

                    b.Property<string>("Settlement")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("SETTLEMENT");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("STATUS");

                    b.ToTable("FINS_ACQPRODUCTPARAMMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsApiwiselog", b =>
                {
                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Application")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("APPLICATION");

                    b.Property<decimal?>("Auditseq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("AUDITSEQ")
                        .HasDefaultValueSql("\"EFCOREPOC\".\"FINS_AUDITLOGSEQ\".\"NEXTVAL\"");

                    b.Property<string>("Errortext")
                        .HasColumnType("CLOB")
                        .HasColumnName("ERRORTEXT");

                    b.Property<string>("Fieldname")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("FIELDNAME");

                    b.Property<string>("Fieldvalue")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("FIELDVALUE");

                    b.Property<string>("Packagename")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("PACKAGENAME");

                    b.Property<string>("Procedurename")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("PROCEDURENAME");

                    b.ToTable("FINS_APIWISELOG");
                });

            modelBuilder.Entity("projectMigration.Models.FinsAssetcategorymaster", b =>
                {
                    b.Property<decimal>("Catgid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CATGID");

                    b.Property<decimal?>("Addedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<decimal>("Assetcatseq")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ASSETCATSEQ");

                    b.Property<string>("Catgdesc")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("CATGDESC");

                    b.Property<string>("CibilCheck")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CIBIL_CHECK");

                    b.Property<string>("DigitalFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("DIGITAL_FLAG");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("IPADDRESS");

                    b.Property<decimal?>("Modefiedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODEFIEDBY");

                    b.Property<DateTime?>("Modefiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODEFIEDON");

                    b.Property<string>("RiskClassification")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("RISK_CLASSIFICATION");

                    b.Property<string>("Uploadid")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("UPLOADID");

                    b.HasKey("Catgid")
                        .HasName("FINS_ASSETCATEGORYMASTER_PK");

                    b.ToTable("FINS_ASSETCATEGORYMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsAssetmodelmapping", b =>
                {
                    b.Property<string>("Addedby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Assetid")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("ASSETID");

                    b.Property<decimal>("Bflprofileid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("BFLPROFILEID");

                    b.Property<string>("Modelid")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("MODELID");

                    b.Property<string>("Modifiedby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<DateTime?>("Modifiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("STATUS")
                        .IsFixedLength(true);

                    b.ToTable("FINS_ASSETMODELMAPPING");
                });

            modelBuilder.Entity("projectMigration.Models.FinsAuthorizationmaster", b =>
                {
                    b.Property<decimal>("AuthSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("AUTH_SEQ_NO")
                        .HasDefaultValueSql("\"EFCOREPOC\".\"FINS_AUTHORIZATIONMASTER_SEQ\".\"NEXTVAL\"");

                    b.Property<string>("AuthAccCardLimit")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_ACC_CARD_LIMIT");

                    b.Property<string>("AuthAccountId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_ACCOUNT_ID");

                    b.Property<string>("AuthAccountLimitUtil")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ACCOUNT_LIMIT_UTIL");

                    b.Property<string>("AuthAcqChannelId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_ACQ_CHANNEL_ID");

                    b.Property<string>("AuthAddOnFirstTran")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_ADD_ON_FIRST_TRAN");

                    b.Property<string>("AuthAddrChngFlg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_ADDR_CHNG_FLG");

                    b.Property<string>("AuthAddressLine1")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(120)")
                        .HasColumnName("AUTH_ADDRESS_LINE1");

                    b.Property<string>("AuthAddressLine2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_ADDRESS_LINE2");

                    b.Property<string>("AuthAddressLine3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_ADDRESS_LINE3");

                    b.Property<string>("AuthAdvanceEmiAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ADVANCE_EMI_AMT");

                    b.Property<string>("AuthAssetCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_ASSET_CODE");

                    b.Property<string>("AuthAuthAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AUTH_AMT");

                    b.Property<string>("AuthAuthCode")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("AUTH_AUTH_CODE");

                    b.Property<string>("AuthAvailableLimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AVAILABLE_LIMIT");

                    b.Property<string>("AuthAvlAmtAfterTxn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AVL_AMT_AFTER_TXN");

                    b.Property<string>("AuthAvlAmtBeforeTxn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AVL_AMT_BEFORE_TXN");

                    b.Property<string>("AuthBankCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_BANK_CODE");

                    b.Property<string>("AuthBatchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_BATCH_ID");

                    b.Property<string>("AuthBreStip")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_BRE_STIP");

                    b.Property<string>("AuthCancelAmtAdjstFrom")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_CANCEL_AMT_ADJST_FROM");

                    b.Property<string>("AuthCardCharges")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CARD_CHARGES");

                    b.Property<string>("AuthCardDesign")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CARD_DESIGN");

                    b.Property<string>("AuthCardExp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CARD_EXP");

                    b.Property<string>("AuthCardNum")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("AUTH_CARD_NUM");

                    b.Property<string>("AuthCardType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CARD_TYPE");

                    b.Property<string>("AuthCardtypeIdentifier")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_CARDTYPE_IDENTIFIER");

                    b.Property<string>("AuthCdParentRrn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CD_PARENT_RRN");

                    b.Property<string>("AuthChallengerEligibleFlag")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_CHALLENGER_ELIGIBLE_FLAG");

                    b.Property<string>("AuthChallengerRuleId1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHALLENGER_RULE_ID1");

                    b.Property<string>("AuthChargeId1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID1");

                    b.Property<string>("AuthChargeId1Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID1_AMT");

                    b.Property<string>("AuthChargeId2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID2");

                    b.Property<string>("AuthChargeId2Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID2_AMT");

                    b.Property<string>("AuthChargeId3")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID3");

                    b.Property<string>("AuthChargeId3Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID3_AMT");

                    b.Property<string>("AuthChargeId4")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID4");

                    b.Property<string>("AuthChargeId4Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID4_AMT");

                    b.Property<string>("AuthChargeId5")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID5");

                    b.Property<string>("AuthChargeId5Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID5_AMT");

                    b.Property<string>("AuthCibilDate")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CIBIL_DATE");

                    b.Property<string>("AuthCibilDone")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_CIBIL_DONE");

                    b.Property<string>("AuthCibilScore")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CIBIL_SCORE");

                    b.Property<string>("AuthCibilTime")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_CIBIL_TIME");

                    b.Property<string>("AuthCoBrandCardCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CO_BRAND_CARD_CODE");

                    b.Property<string>("AuthCoBrandLimitFlag")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CO_BRAND_LIMIT_FLAG");

                    b.Property<string>("AuthCreditProgramCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CREDIT_PROGRAM_CODE");

                    b.Property<string>("AuthCtrFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_CTR_FLAG");

                    b.Property<string>("AuthCustomerDueCycle")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("AUTH_CUSTOMER_DUE_CYCLE");

                    b.Property<string>("AuthCustomerId")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("AUTH_CUSTOMER_ID");

                    b.Property<string>("AuthCustomerName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_CUSTOMER_NAME");

                    b.Property<DateTime?>("AuthDateLtxnMatch")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_DATE_LTXN_MATCH");

                    b.Property<string>("AuthDbdSubvenPerc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DBD_SUBVEN_PERC");

                    b.Property<string>("AuthDeliveryPinCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DELIVERY_PIN_CODE");

                    b.Property<string>("AuthDfsAcquringChannel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DFS_ACQURING_CHANNEL");

                    b.Property<string>("AuthDfsEFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_DFS_E_FLAG");

                    b.Property<string>("AuthDfsFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_DFS_FLAG");

                    b.Property<string>("AuthDfsPremiumAmount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DFS_PREMIUM_AMOUNT");

                    b.Property<string>("AuthDigitalTxnEligibility")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_DIGITAL_TXN_ELIGIBILITY");

                    b.Property<string>("AuthDocumentRequiredFlg")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_DOCUMENT_REQUIRED_FLG");

                    b.Property<string>("AuthDowNumberPayment")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DOW_NUMBER_PAYMENT");

                    b.Property<string>("AuthEcsAccountNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ECS_ACCOUNT_NUMBER");

                    b.Property<string>("AuthEcsAvailableLimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ECS_AVAILABLE_LIMIT");

                    b.Property<string>("AuthEcsBankName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_ECS_BANK_NAME");

                    b.Property<string>("AuthEcsMandateRequired")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_ECS_MANDATE_REQUIRED");

                    b.Property<string>("AuthEcslmtamt")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_ECSLMTAMT");

                    b.Property<string>("AuthEmiAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_EMI_AMT");

                    b.Property<string>("AuthExceptionMsg")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("AUTH_EXCEPTION_MSG");

                    b.Property<string>("AuthExtraPricingLimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_EXTRA_PRICING_LIMIT");

                    b.Property<string>("AuthFailedRuleId")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("AUTH_FAILED_RULE_ID");

                    b.Property<string>("AuthField63Tag96")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_FIELD_63_TAG_96");

                    b.Property<string>("AuthFinancingTypeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_FINANCING_TYPE_CODE");

                    b.Property<DateTime?>("AuthFirstDueDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_FIRST_DUE_DATE");

                    b.Property<string>("AuthFirstSwipeFlag")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_FIRST_SWIPE_FLAG");

                    b.Property<string>("AuthFirstTranscatioNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_FIRST_TRANSCATIO_NO");

                    b.Property<string>("AuthFosMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_FOS_MOBILE");

                    b.Property<string>("AuthFraudFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_FRAUD_FLAG");

                    b.Property<DateTime?>("AuthFraudTxnDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_FRAUD_TXN_DATE");

                    b.Property<string>("AuthFraudTxnFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_FRAUD_TXN_FLAG");

                    b.Property<string>("AuthIdentifier")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_IDENTIFIER");

                    b.Property<string>("AuthImei")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_IMEI");

                    b.Property<string>("AuthInterestRate")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_INTEREST_RATE");

                    b.Property<string>("AuthIpAddress")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_IP_ADDRESS");

                    b.Property<string>("AuthLastUpdDate")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("AUTH_LAST_UPD_DATE");

                    b.Property<string>("AuthLoanToValue")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_LOAN_TO_VALUE");

                    b.Property<string>("AuthManufacturerId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_MANUFACTURER_ID");

                    b.Property<string>("AuthMatchFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_MATCH_FLAG");

                    b.Property<string>("AuthMbd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_MBD");

                    b.Property<string>("AuthMeDealerId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ME_DEALER_ID");

                    b.Property<string>("AuthMerchantBranchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_MERCHANT_BRANCH_ID");

                    b.Property<string>("AuthMerchantName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_MERCHANT_NAME");

                    b.Property<string>("AuthMicrCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_MICR_CODE");

                    b.Property<string>("AuthMid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_MID");

                    b.Property<string>("AuthMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_MOBILE");

                    b.Property<string>("AuthMobileChangedFlag")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_MOBILE_CHANGED_FLAG");

                    b.Property<string>("AuthMobileTransaction")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_MOBILE_TRANSACTION");

                    b.Property<string>("AuthModelId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_MODEL_ID");

                    b.Property<string>("AuthModelMake")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("AUTH_MODEL_MAKE");

                    b.Property<decimal?>("AuthNoOfAddonCards")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AUTH_NO_OF_ADDON_CARDS");

                    b.Property<string>("AuthNoOfAdvEmi")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_NO_OF_ADV_EMI");

                    b.Property<string>("AuthNonDigitalTxnEligibility")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_NON_DIGITAL_TXN_ELIGIBILITY");

                    b.Property<string>("AuthOldCibilDate")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_OLD_CIBIL_DATE");

                    b.Property<string>("AuthOldCibilScore")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_OLD_CIBIL_SCORE");

                    b.Property<string>("AuthOldCibilTime")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_OLD_CIBIL_TIME");

                    b.Property<string>("AuthOrderNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_ORDER_NO");

                    b.Property<string>("AuthOrgTxnAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ORG_TXN_AMT");

                    b.Property<string>("AuthOriginalRrnumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(12)")
                        .HasColumnName("AUTH_ORIGINAL_RRNUMBER");

                    b.Property<string>("AuthOtpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_OTP_ID");

                    b.Property<string>("AuthOtpRequestId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_OTP_REQUEST_ID");

                    b.Property<string>("AuthOtpVerificReslt")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_OTP_VERIFIC_RESLT");

                    b.Property<DateTime?>("AuthOtpgentime")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_OTPGENTIME");

                    b.Property<string>("AuthParentRrnumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(12)")
                        .HasColumnName("AUTH_PARENT_RRNUMBER");

                    b.Property<string>("AuthPartialCnclChrgs")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_PARTIAL_CNCL_CHRGS");

                    b.Property<string>("AuthPartialCnclFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_PARTIAL_CNCL_FLAG");

                    b.Property<string>("AuthPartialCnclId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_PARTIAL_CNCL_ID");

                    b.Property<string>("AuthPartialDbdRefund")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_PARTIAL_DBD_REFUND");

                    b.Property<string>("AuthPartnerEdcChannel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_PARTNER_EDC_CHANNEL");

                    b.Property<DateTime?>("AuthPartnerapiRequestdate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_PARTNERAPI_REQUESTDATE");

                    b.Property<string>("AuthPinumberEntered")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_PINUMBER_ENTERED");

                    b.Property<string>("AuthPosEntryMode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4)")
                        .HasColumnName("AUTH_POS_ENTRY_MODE");

                    b.Property<string>("AuthPosReinventAuthcode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_POS_REINVENT_AUTHCODE");

                    b.Property<string>("AuthPosReinventInvoiceAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_POS_REINVENT_INVOICE_AMT");

                    b.Property<string>("AuthPrimaryAddOnInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_PRIMARY_ADD_ON_IND");

                    b.Property<string>("AuthProcessCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_PROCESS_CODE");

                    b.Property<string>("AuthProcessingFee")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_PROCESSING_FEE");

                    b.Property<string>("AuthProdDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_PROD_DESC");

                    b.Property<string>("AuthProductCodeType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_PRODUCT_CODE_TYPE");

                    b.Property<string>("AuthProductId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_PRODUCT_ID");

                    b.Property<string>("AuthPromoCode")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_PROMO_CODE");

                    b.Property<string>("AuthRelationshipType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_RELATIONSHIP_TYPE");

                    b.Property<DateTime?>("AuthReqDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_REQ_DATE");

                    b.Property<DateTime?>("AuthReqdatetime")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_REQDATETIME");

                    b.Property<string>("AuthRequestid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_REQUESTID");

                    b.Property<string>("AuthResidenceCity")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("AUTH_RESIDENCE_CITY");

                    b.Property<string>("AuthResponseCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("AUTH_RESPONSE_CODE");

                    b.Property<string>("AuthResponseDesc")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("AUTH_RESPONSE_DESC");

                    b.Property<string>("AuthRrnumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(12)")
                        .HasColumnName("AUTH_RRNUMBER");

                    b.Property<string>("AuthSchemeCode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_SCHEME_CODE");

                    b.Property<string>("AuthSdkSegment")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_SDK_SEGMENT");

                    b.Property<DateTime?>("AuthSdkSegmentDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_SDK_SEGMENT_DATE");

                    b.Property<string>("AuthSettledFlag")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("AUTH_SETTLED_FLAG");

                    b.Property<DateTime?>("AuthSettledFlagDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_SETTLED_FLAG_DATE");

                    b.Property<string>("AuthSfdcorg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("AUTH_SFDCORG")
                        .IsFixedLength(true);

                    b.Property<string>("AuthSourceReverse")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_SOURCE_REVERSE");

                    b.Property<string>("AuthStoreId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_STORE_ID");

                    b.Property<string>("AuthTenor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_TENOR");

                    b.Property<string>("AuthTid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_TID");

                    b.Property<string>("AuthTliUtilizedFlg")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_TLI_UTILIZED_FLG");

                    b.Property<string>("AuthTraceAuditNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_TRACE_AUDIT_NUMBER");

                    b.Property<string>("AuthTransactionBranchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_TRANSACTION_BRANCH_ID");

                    b.Property<string>("AuthTxnMobileNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_TXN_MOBILE_NO");

                    b.Property<string>("AuthTxnSource")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_TXN_SOURCE");

                    b.Property<string>("AuthUniqueCancellationId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_UNIQUE_CANCELLATION_ID");

                    b.Property<string>("AuthUserName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("AUTH_USER_NAME");

                    b.Property<string>("AuthVasAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_VAS_AMT");

                    b.Property<string>("DeliveryAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("DELIVERY_ADDRESS");

                    b.Property<decimal?>("SeqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("SEQ_ID")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("AuthSeqNo")
                        .HasName("FINS_AUTHMASTER_PK1");

                    b.HasIndex(new[] { "AuthCustomerId", "AuthRrnumber", "AuthResponseCode" }, "IDX$$_AE240001");

                    b.ToTable("FINS_AUTHORIZATIONMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsAuthorizationmasterBkp", b =>
                {
                    b.Property<string>("AuthAccCardLimit")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_ACC_CARD_LIMIT");

                    b.Property<string>("AuthAccountId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_ACCOUNT_ID");

                    b.Property<string>("AuthAccountLimitUtil")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ACCOUNT_LIMIT_UTIL");

                    b.Property<string>("AuthAcqChannelId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_ACQ_CHANNEL_ID");

                    b.Property<string>("AuthAddOnFirstTran")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_ADD_ON_FIRST_TRAN");

                    b.Property<string>("AuthAddrChngFlg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_ADDR_CHNG_FLG");

                    b.Property<string>("AuthAddressLine1")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(120)")
                        .HasColumnName("AUTH_ADDRESS_LINE1");

                    b.Property<string>("AuthAddressLine2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_ADDRESS_LINE2");

                    b.Property<string>("AuthAddressLine3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_ADDRESS_LINE3");

                    b.Property<string>("AuthAdvanceEmiAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ADVANCE_EMI_AMT");

                    b.Property<string>("AuthAssetCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_ASSET_CODE");

                    b.Property<string>("AuthAuthAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AUTH_AMT");

                    b.Property<string>("AuthAuthCode")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("AUTH_AUTH_CODE");

                    b.Property<string>("AuthAvailableLimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AVAILABLE_LIMIT");

                    b.Property<string>("AuthAvlAmtAfterTxn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AVL_AMT_AFTER_TXN");

                    b.Property<string>("AuthAvlAmtBeforeTxn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AVL_AMT_BEFORE_TXN");

                    b.Property<string>("AuthBankCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_BANK_CODE");

                    b.Property<string>("AuthBatchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_BATCH_ID");

                    b.Property<string>("AuthBreStip")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_BRE_STIP");

                    b.Property<string>("AuthCancelAmtAdjstFrom")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_CANCEL_AMT_ADJST_FROM");

                    b.Property<string>("AuthCardCharges")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CARD_CHARGES");

                    b.Property<string>("AuthCardDesign")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CARD_DESIGN");

                    b.Property<string>("AuthCardExp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CARD_EXP");

                    b.Property<string>("AuthCardNum")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("AUTH_CARD_NUM");

                    b.Property<string>("AuthCardType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CARD_TYPE");

                    b.Property<string>("AuthCardtypeIdentifier")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_CARDTYPE_IDENTIFIER");

                    b.Property<string>("AuthCdParentRrn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CD_PARENT_RRN");

                    b.Property<string>("AuthChallengerEligibleFlag")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_CHALLENGER_ELIGIBLE_FLAG");

                    b.Property<string>("AuthChallengerRuleId1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHALLENGER_RULE_ID1");

                    b.Property<string>("AuthChargeId1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID1");

                    b.Property<string>("AuthChargeId1Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID1_AMT");

                    b.Property<string>("AuthChargeId2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID2");

                    b.Property<string>("AuthChargeId2Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID2_AMT");

                    b.Property<string>("AuthChargeId3")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID3");

                    b.Property<string>("AuthChargeId3Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID3_AMT");

                    b.Property<string>("AuthChargeId4")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID4");

                    b.Property<string>("AuthChargeId4Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID4_AMT");

                    b.Property<string>("AuthChargeId5")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID5");

                    b.Property<string>("AuthChargeId5Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID5_AMT");

                    b.Property<string>("AuthCibilDate")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CIBIL_DATE");

                    b.Property<string>("AuthCibilDone")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_CIBIL_DONE");

                    b.Property<string>("AuthCibilScore")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CIBIL_SCORE");

                    b.Property<string>("AuthCibilTime")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_CIBIL_TIME");

                    b.Property<string>("AuthCoBrandCardCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CO_BRAND_CARD_CODE");

                    b.Property<string>("AuthCoBrandLimitFlag")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CO_BRAND_LIMIT_FLAG");

                    b.Property<string>("AuthCreditProgramCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CREDIT_PROGRAM_CODE");

                    b.Property<string>("AuthCtrFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_CTR_FLAG");

                    b.Property<string>("AuthCustomerDueCycle")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("AUTH_CUSTOMER_DUE_CYCLE");

                    b.Property<string>("AuthCustomerId")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("AUTH_CUSTOMER_ID");

                    b.Property<string>("AuthCustomerName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_CUSTOMER_NAME");

                    b.Property<DateTime?>("AuthDateLtxnMatch")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_DATE_LTXN_MATCH");

                    b.Property<string>("AuthDbdSubvenPerc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DBD_SUBVEN_PERC");

                    b.Property<string>("AuthDeliveryPinCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DELIVERY_PIN_CODE");

                    b.Property<string>("AuthDfsAcquringChannel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DFS_ACQURING_CHANNEL");

                    b.Property<string>("AuthDfsEFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_DFS_E_FLAG");

                    b.Property<string>("AuthDfsFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_DFS_FLAG");

                    b.Property<string>("AuthDfsPremiumAmount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DFS_PREMIUM_AMOUNT");

                    b.Property<string>("AuthDigitalTxnEligibility")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_DIGITAL_TXN_ELIGIBILITY");

                    b.Property<string>("AuthDocumentRequiredFlg")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_DOCUMENT_REQUIRED_FLG");

                    b.Property<string>("AuthDowNumberPayment")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DOW_NUMBER_PAYMENT");

                    b.Property<string>("AuthEcsAccountNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ECS_ACCOUNT_NUMBER");

                    b.Property<string>("AuthEcsAvailableLimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ECS_AVAILABLE_LIMIT");

                    b.Property<string>("AuthEcsBankName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_ECS_BANK_NAME");

                    b.Property<string>("AuthEcsMandateRequired")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_ECS_MANDATE_REQUIRED");

                    b.Property<string>("AuthEcslmtamt")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_ECSLMTAMT");

                    b.Property<string>("AuthEmiAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_EMI_AMT");

                    b.Property<string>("AuthExceptionMsg")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("AUTH_EXCEPTION_MSG");

                    b.Property<string>("AuthExtraPricingLimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_EXTRA_PRICING_LIMIT");

                    b.Property<string>("AuthFailedRuleId")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("AUTH_FAILED_RULE_ID");

                    b.Property<string>("AuthField63Tag96")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_FIELD_63_TAG_96");

                    b.Property<string>("AuthFinancingTypeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_FINANCING_TYPE_CODE");

                    b.Property<DateTime?>("AuthFirstDueDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_FIRST_DUE_DATE");

                    b.Property<string>("AuthFirstSwipeFlag")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_FIRST_SWIPE_FLAG");

                    b.Property<string>("AuthFirstTranscatioNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_FIRST_TRANSCATIO_NO");

                    b.Property<string>("AuthFosMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_FOS_MOBILE");

                    b.Property<string>("AuthFraudFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_FRAUD_FLAG");

                    b.Property<DateTime?>("AuthFraudTxnDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_FRAUD_TXN_DATE");

                    b.Property<string>("AuthFraudTxnFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_FRAUD_TXN_FLAG");

                    b.Property<string>("AuthIdentifier")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_IDENTIFIER");

                    b.Property<string>("AuthImei")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_IMEI");

                    b.Property<string>("AuthInterestRate")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_INTEREST_RATE");

                    b.Property<string>("AuthIpAddress")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_IP_ADDRESS");

                    b.Property<string>("AuthLastUpdDate")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("AUTH_LAST_UPD_DATE");

                    b.Property<string>("AuthLoanToValue")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_LOAN_TO_VALUE");

                    b.Property<string>("AuthManufacturerId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_MANUFACTURER_ID");

                    b.Property<string>("AuthMatchFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_MATCH_FLAG");

                    b.Property<string>("AuthMbd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_MBD");

                    b.Property<string>("AuthMeDealerId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ME_DEALER_ID");

                    b.Property<string>("AuthMerchantBranchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_MERCHANT_BRANCH_ID");

                    b.Property<string>("AuthMerchantName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_MERCHANT_NAME");

                    b.Property<string>("AuthMicrCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_MICR_CODE");

                    b.Property<string>("AuthMid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_MID");

                    b.Property<string>("AuthMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_MOBILE");

                    b.Property<string>("AuthMobileChangedFlag")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_MOBILE_CHANGED_FLAG");

                    b.Property<string>("AuthMobileTransaction")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_MOBILE_TRANSACTION");

                    b.Property<string>("AuthModelId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_MODEL_ID");

                    b.Property<string>("AuthModelMake")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("AUTH_MODEL_MAKE");

                    b.Property<decimal?>("AuthNoOfAddonCards")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AUTH_NO_OF_ADDON_CARDS");

                    b.Property<string>("AuthNoOfAdvEmi")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_NO_OF_ADV_EMI");

                    b.Property<string>("AuthNonDigitalTxnEligibility")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_NON_DIGITAL_TXN_ELIGIBILITY");

                    b.Property<string>("AuthOldCibilDate")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_OLD_CIBIL_DATE");

                    b.Property<string>("AuthOldCibilScore")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_OLD_CIBIL_SCORE");

                    b.Property<string>("AuthOldCibilTime")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_OLD_CIBIL_TIME");

                    b.Property<string>("AuthOrderNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_ORDER_NO");

                    b.Property<string>("AuthOrgTxnAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ORG_TXN_AMT");

                    b.Property<string>("AuthOriginalRrnumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(12)")
                        .HasColumnName("AUTH_ORIGINAL_RRNUMBER");

                    b.Property<string>("AuthOtpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_OTP_ID");

                    b.Property<string>("AuthOtpRequestId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_OTP_REQUEST_ID");

                    b.Property<string>("AuthOtpVerificReslt")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_OTP_VERIFIC_RESLT");

                    b.Property<DateTime?>("AuthOtpgentime")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_OTPGENTIME");

                    b.Property<string>("AuthParentRrnumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(12)")
                        .HasColumnName("AUTH_PARENT_RRNUMBER");

                    b.Property<string>("AuthPartialCnclChrgs")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_PARTIAL_CNCL_CHRGS");

                    b.Property<string>("AuthPartialCnclFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_PARTIAL_CNCL_FLAG");

                    b.Property<string>("AuthPartialCnclId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_PARTIAL_CNCL_ID");

                    b.Property<string>("AuthPartialDbdRefund")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_PARTIAL_DBD_REFUND");

                    b.Property<string>("AuthPartnerEdcChannel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_PARTNER_EDC_CHANNEL");

                    b.Property<DateTime?>("AuthPartnerapiRequestdate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_PARTNERAPI_REQUESTDATE");

                    b.Property<string>("AuthPinumberEntered")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_PINUMBER_ENTERED");

                    b.Property<string>("AuthPosEntryMode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4)")
                        .HasColumnName("AUTH_POS_ENTRY_MODE");

                    b.Property<string>("AuthPosReinventAuthcode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_POS_REINVENT_AUTHCODE");

                    b.Property<string>("AuthPosReinventInvoiceAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_POS_REINVENT_INVOICE_AMT");

                    b.Property<string>("AuthPrimaryAddOnInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_PRIMARY_ADD_ON_IND");

                    b.Property<string>("AuthProcessCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_PROCESS_CODE");

                    b.Property<string>("AuthProcessingFee")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_PROCESSING_FEE");

                    b.Property<string>("AuthProdDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_PROD_DESC");

                    b.Property<string>("AuthProductCodeType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_PRODUCT_CODE_TYPE");

                    b.Property<string>("AuthProductId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_PRODUCT_ID");

                    b.Property<string>("AuthPromoCode")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_PROMO_CODE");

                    b.Property<string>("AuthRelationshipType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_RELATIONSHIP_TYPE");

                    b.Property<DateTime?>("AuthReqDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_REQ_DATE");

                    b.Property<DateTime?>("AuthReqdatetime")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_REQDATETIME");

                    b.Property<string>("AuthRequestid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_REQUESTID");

                    b.Property<string>("AuthResidenceCity")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("AUTH_RESIDENCE_CITY");

                    b.Property<string>("AuthResponseCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("AUTH_RESPONSE_CODE");

                    b.Property<string>("AuthResponseDesc")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("AUTH_RESPONSE_DESC");

                    b.Property<string>("AuthRrnumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(12)")
                        .HasColumnName("AUTH_RRNUMBER");

                    b.Property<string>("AuthSchemeCode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_SCHEME_CODE");

                    b.Property<string>("AuthSdkSegment")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_SDK_SEGMENT");

                    b.Property<DateTime?>("AuthSdkSegmentDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_SDK_SEGMENT_DATE");

                    b.Property<decimal?>("AuthSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("AUTH_SEQ_NO")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("AuthSettledFlag")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("AUTH_SETTLED_FLAG");

                    b.Property<DateTime?>("AuthSettledFlagDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_SETTLED_FLAG_DATE");

                    b.Property<string>("AuthSfdcorg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("AUTH_SFDCORG")
                        .IsFixedLength(true);

                    b.Property<string>("AuthSourceReverse")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_SOURCE_REVERSE");

                    b.Property<string>("AuthStoreId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_STORE_ID");

                    b.Property<string>("AuthTenor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_TENOR");

                    b.Property<string>("AuthTid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_TID");

                    b.Property<string>("AuthTliUtilizedFlg")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_TLI_UTILIZED_FLG");

                    b.Property<string>("AuthTraceAuditNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_TRACE_AUDIT_NUMBER");

                    b.Property<string>("AuthTransactionBranchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_TRANSACTION_BRANCH_ID");

                    b.Property<string>("AuthTxnMobileNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_TXN_MOBILE_NO");

                    b.Property<string>("AuthTxnSource")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_TXN_SOURCE");

                    b.Property<string>("AuthUniqueCancellationId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_UNIQUE_CANCELLATION_ID");

                    b.Property<string>("AuthUserName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("AUTH_USER_NAME");

                    b.Property<string>("AuthVasAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_VAS_AMT");

                    b.Property<string>("DeliveryAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("DELIVERY_ADDRESS");

                    b.Property<decimal?>("SeqId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SEQ_ID");

                    b.HasIndex(new[] { "AuthCardNum" }, "IDX_BKPAUTHCARD");

                    b.HasIndex(new[] { "AuthSourceReverse" }, "IDX_BKPAUTHREVERSE");

                    b.HasIndex(new[] { "AuthRrnumber" }, "IDX_BKPAUTHRRN");

                    b.ToTable("FINS_AUTHORIZATIONMASTER_BKP");
                });

            modelBuilder.Entity("projectMigration.Models.FinsAuthorizationmasterHi", b =>
                {
                    b.Property<decimal>("AuthSeqNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("AUTH_SEQ_NO")
                        .HasDefaultValueSql("NULL");

                    b.Property<string>("AuthAccCardLimit")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_ACC_CARD_LIMIT");

                    b.Property<string>("AuthAccountId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_ACCOUNT_ID");

                    b.Property<string>("AuthAccountLimitUtil")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ACCOUNT_LIMIT_UTIL");

                    b.Property<string>("AuthAcqChannelId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_ACQ_CHANNEL_ID");

                    b.Property<string>("AuthAddOnFirstTran")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_ADD_ON_FIRST_TRAN");

                    b.Property<string>("AuthAddrChngFlg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_ADDR_CHNG_FLG");

                    b.Property<string>("AuthAddressLine1")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(120)")
                        .HasColumnName("AUTH_ADDRESS_LINE1");

                    b.Property<string>("AuthAddressLine2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_ADDRESS_LINE2");

                    b.Property<string>("AuthAddressLine3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_ADDRESS_LINE3");

                    b.Property<string>("AuthAdvanceEmiAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ADVANCE_EMI_AMT");

                    b.Property<string>("AuthAssetCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_ASSET_CODE");

                    b.Property<string>("AuthAuthAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AUTH_AMT");

                    b.Property<string>("AuthAuthCode")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("AUTH_AUTH_CODE");

                    b.Property<string>("AuthAvailableLimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AVAILABLE_LIMIT");

                    b.Property<string>("AuthAvlAmtAfterTxn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AVL_AMT_AFTER_TXN");

                    b.Property<string>("AuthAvlAmtBeforeTxn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AVL_AMT_BEFORE_TXN");

                    b.Property<string>("AuthBankCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_BANK_CODE");

                    b.Property<string>("AuthBatchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_BATCH_ID");

                    b.Property<string>("AuthBreStip")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_BRE_STIP");

                    b.Property<string>("AuthCancelAmtAdjstFrom")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_CANCEL_AMT_ADJST_FROM");

                    b.Property<string>("AuthCardCharges")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CARD_CHARGES");

                    b.Property<string>("AuthCardDesign")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CARD_DESIGN");

                    b.Property<string>("AuthCardExp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CARD_EXP");

                    b.Property<string>("AuthCardNum")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("AUTH_CARD_NUM");

                    b.Property<string>("AuthCardType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CARD_TYPE");

                    b.Property<string>("AuthCardtypeIdentifier")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_CARDTYPE_IDENTIFIER");

                    b.Property<string>("AuthCdParentRrn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CD_PARENT_RRN");

                    b.Property<string>("AuthChallengerEligibleFlag")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_CHALLENGER_ELIGIBLE_FLAG");

                    b.Property<string>("AuthChallengerRuleId1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHALLENGER_RULE_ID1");

                    b.Property<string>("AuthChargeId1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID1");

                    b.Property<string>("AuthChargeId1Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID1_AMT");

                    b.Property<string>("AuthChargeId2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID2");

                    b.Property<string>("AuthChargeId2Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID2_AMT");

                    b.Property<string>("AuthChargeId3")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID3");

                    b.Property<string>("AuthChargeId3Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID3_AMT");

                    b.Property<string>("AuthChargeId4")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID4");

                    b.Property<string>("AuthChargeId4Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID4_AMT");

                    b.Property<string>("AuthChargeId5")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID5");

                    b.Property<string>("AuthChargeId5Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID5_AMT");

                    b.Property<string>("AuthCibilDate")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CIBIL_DATE");

                    b.Property<string>("AuthCibilDone")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_CIBIL_DONE");

                    b.Property<string>("AuthCibilScore")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CIBIL_SCORE");

                    b.Property<string>("AuthCibilTime")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_CIBIL_TIME");

                    b.Property<string>("AuthCoBrandCardCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CO_BRAND_CARD_CODE");

                    b.Property<string>("AuthCoBrandLimitFlag")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CO_BRAND_LIMIT_FLAG");

                    b.Property<string>("AuthCreditProgramCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CREDIT_PROGRAM_CODE");

                    b.Property<string>("AuthCtrFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_CTR_FLAG");

                    b.Property<string>("AuthCustomerDueCycle")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("AUTH_CUSTOMER_DUE_CYCLE");

                    b.Property<string>("AuthCustomerId")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("AUTH_CUSTOMER_ID");

                    b.Property<string>("AuthCustomerName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_CUSTOMER_NAME");

                    b.Property<DateTime?>("AuthDateLtxnMatch")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_DATE_LTXN_MATCH");

                    b.Property<string>("AuthDbdSubvenPerc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DBD_SUBVEN_PERC");

                    b.Property<string>("AuthDeliveryPinCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DELIVERY_PIN_CODE");

                    b.Property<string>("AuthDfsAcquringChannel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DFS_ACQURING_CHANNEL");

                    b.Property<string>("AuthDfsEFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_DFS_E_FLAG");

                    b.Property<string>("AuthDfsFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_DFS_FLAG");

                    b.Property<string>("AuthDfsPremiumAmount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DFS_PREMIUM_AMOUNT");

                    b.Property<string>("AuthDigitalTxnEligibility")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_DIGITAL_TXN_ELIGIBILITY");

                    b.Property<string>("AuthDocumentRequiredFlg")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_DOCUMENT_REQUIRED_FLG");

                    b.Property<string>("AuthDowNumberPayment")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DOW_NUMBER_PAYMENT");

                    b.Property<string>("AuthEcsAccountNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ECS_ACCOUNT_NUMBER");

                    b.Property<string>("AuthEcsAvailableLimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ECS_AVAILABLE_LIMIT");

                    b.Property<string>("AuthEcsBankName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_ECS_BANK_NAME");

                    b.Property<string>("AuthEcsMandateRequired")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_ECS_MANDATE_REQUIRED");

                    b.Property<string>("AuthEcslmtamt")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_ECSLMTAMT");

                    b.Property<string>("AuthEmiAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_EMI_AMT");

                    b.Property<string>("AuthExceptionMsg")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("AUTH_EXCEPTION_MSG");

                    b.Property<string>("AuthExtraPricingLimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_EXTRA_PRICING_LIMIT");

                    b.Property<string>("AuthFailedRuleId")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("AUTH_FAILED_RULE_ID");

                    b.Property<string>("AuthField63Tag96")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_FIELD_63_TAG_96");

                    b.Property<string>("AuthFinancingTypeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_FINANCING_TYPE_CODE");

                    b.Property<DateTime?>("AuthFirstDueDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_FIRST_DUE_DATE");

                    b.Property<string>("AuthFirstSwipeFlag")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_FIRST_SWIPE_FLAG");

                    b.Property<string>("AuthFirstTranscatioNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_FIRST_TRANSCATIO_NO");

                    b.Property<string>("AuthFosMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_FOS_MOBILE");

                    b.Property<string>("AuthFraudFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_FRAUD_FLAG");

                    b.Property<DateTime?>("AuthFraudTxnDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_FRAUD_TXN_DATE");

                    b.Property<string>("AuthFraudTxnFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_FRAUD_TXN_FLAG");

                    b.Property<string>("AuthIdentifier")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_IDENTIFIER");

                    b.Property<string>("AuthImei")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_IMEI");

                    b.Property<string>("AuthInterestRate")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_INTEREST_RATE");

                    b.Property<string>("AuthIpAddress")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_IP_ADDRESS");

                    b.Property<string>("AuthLastUpdDate")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("AUTH_LAST_UPD_DATE");

                    b.Property<string>("AuthLoanToValue")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_LOAN_TO_VALUE");

                    b.Property<string>("AuthManufacturerId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_MANUFACTURER_ID");

                    b.Property<string>("AuthMatchFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_MATCH_FLAG");

                    b.Property<string>("AuthMbd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_MBD");

                    b.Property<string>("AuthMeDealerId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ME_DEALER_ID");

                    b.Property<string>("AuthMerchantBranchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_MERCHANT_BRANCH_ID");

                    b.Property<string>("AuthMerchantName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_MERCHANT_NAME");

                    b.Property<string>("AuthMicrCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_MICR_CODE");

                    b.Property<string>("AuthMid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_MID");

                    b.Property<string>("AuthMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_MOBILE");

                    b.Property<string>("AuthMobileChangedFlag")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_MOBILE_CHANGED_FLAG");

                    b.Property<string>("AuthMobileTransaction")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_MOBILE_TRANSACTION");

                    b.Property<string>("AuthModelId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_MODEL_ID");

                    b.Property<string>("AuthModelMake")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("AUTH_MODEL_MAKE");

                    b.Property<decimal?>("AuthNoOfAddonCards")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AUTH_NO_OF_ADDON_CARDS");

                    b.Property<string>("AuthNoOfAdvEmi")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_NO_OF_ADV_EMI");

                    b.Property<string>("AuthNonDigitalTxnEligibility")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_NON_DIGITAL_TXN_ELIGIBILITY");

                    b.Property<string>("AuthOldCibilDate")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_OLD_CIBIL_DATE");

                    b.Property<string>("AuthOldCibilScore")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_OLD_CIBIL_SCORE");

                    b.Property<string>("AuthOldCibilTime")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_OLD_CIBIL_TIME");

                    b.Property<string>("AuthOrderNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_ORDER_NO");

                    b.Property<string>("AuthOrgTxnAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ORG_TXN_AMT");

                    b.Property<string>("AuthOriginalRrnumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(12)")
                        .HasColumnName("AUTH_ORIGINAL_RRNUMBER");

                    b.Property<string>("AuthOtpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_OTP_ID");

                    b.Property<string>("AuthOtpRequestId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_OTP_REQUEST_ID");

                    b.Property<string>("AuthOtpVerificReslt")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_OTP_VERIFIC_RESLT");

                    b.Property<DateTime?>("AuthOtpgentime")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_OTPGENTIME");

                    b.Property<string>("AuthParentRrnumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(12)")
                        .HasColumnName("AUTH_PARENT_RRNUMBER");

                    b.Property<string>("AuthPartialCnclChrgs")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_PARTIAL_CNCL_CHRGS");

                    b.Property<string>("AuthPartialCnclFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_PARTIAL_CNCL_FLAG");

                    b.Property<string>("AuthPartialCnclId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_PARTIAL_CNCL_ID");

                    b.Property<string>("AuthPartialDbdRefund")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_PARTIAL_DBD_REFUND");

                    b.Property<string>("AuthPartnerEdcChannel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_PARTNER_EDC_CHANNEL");

                    b.Property<DateTime?>("AuthPartnerapiRequestdate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_PARTNERAPI_REQUESTDATE");

                    b.Property<string>("AuthPinumberEntered")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_PINUMBER_ENTERED");

                    b.Property<string>("AuthPosEntryMode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4)")
                        .HasColumnName("AUTH_POS_ENTRY_MODE");

                    b.Property<string>("AuthPosReinventAuthcode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_POS_REINVENT_AUTHCODE");

                    b.Property<string>("AuthPosReinventInvoiceAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_POS_REINVENT_INVOICE_AMT");

                    b.Property<string>("AuthPrimaryAddOnInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_PRIMARY_ADD_ON_IND");

                    b.Property<string>("AuthProcessCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_PROCESS_CODE");

                    b.Property<string>("AuthProcessingFee")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_PROCESSING_FEE");

                    b.Property<string>("AuthProdDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_PROD_DESC");

                    b.Property<string>("AuthProductCodeType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_PRODUCT_CODE_TYPE");

                    b.Property<string>("AuthProductId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_PRODUCT_ID");

                    b.Property<string>("AuthPromoCode")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_PROMO_CODE");

                    b.Property<string>("AuthRelationshipType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_RELATIONSHIP_TYPE");

                    b.Property<DateTime?>("AuthReqDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_REQ_DATE");

                    b.Property<DateTime?>("AuthReqdatetime")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_REQDATETIME");

                    b.Property<string>("AuthRequestid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_REQUESTID");

                    b.Property<string>("AuthResidenceCity")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("AUTH_RESIDENCE_CITY");

                    b.Property<string>("AuthResponseCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("AUTH_RESPONSE_CODE");

                    b.Property<string>("AuthResponseDesc")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("AUTH_RESPONSE_DESC");

                    b.Property<string>("AuthRrnumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(12)")
                        .HasColumnName("AUTH_RRNUMBER");

                    b.Property<string>("AuthSchemeCode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_SCHEME_CODE");

                    b.Property<string>("AuthSdkSegment")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_SDK_SEGMENT");

                    b.Property<DateTime?>("AuthSdkSegmentDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_SDK_SEGMENT_DATE");

                    b.Property<string>("AuthSettledFlag")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("AUTH_SETTLED_FLAG");

                    b.Property<DateTime?>("AuthSettledFlagDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_SETTLED_FLAG_DATE");

                    b.Property<string>("AuthSfdcorg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("AUTH_SFDCORG")
                        .IsFixedLength(true);

                    b.Property<string>("AuthSourceReverse")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_SOURCE_REVERSE");

                    b.Property<string>("AuthStoreId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_STORE_ID");

                    b.Property<string>("AuthTenor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_TENOR");

                    b.Property<string>("AuthTid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_TID");

                    b.Property<string>("AuthTliUtilizedFlg")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_TLI_UTILIZED_FLG");

                    b.Property<string>("AuthTraceAuditNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_TRACE_AUDIT_NUMBER");

                    b.Property<string>("AuthTransactionBranchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_TRANSACTION_BRANCH_ID");

                    b.Property<string>("AuthTxnMobileNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_TXN_MOBILE_NO");

                    b.Property<string>("AuthTxnSource")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_TXN_SOURCE");

                    b.Property<string>("AuthUniqueCancellationId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_UNIQUE_CANCELLATION_ID");

                    b.Property<string>("AuthUserName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("AUTH_USER_NAME");

                    b.Property<string>("AuthVasAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_VAS_AMT");

                    b.Property<string>("DeliveryAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("DELIVERY_ADDRESS");

                    b.Property<decimal?>("SeqId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SEQ_ID");

                    b.HasKey("AuthSeqNo")
                        .HasName("FINS_AUTHMASTER_HIS_PK1");

                    b.HasIndex(new[] { "AuthCardNum" }, "IDX_HISAUTHCARD");

                    b.HasIndex(new[] { "AuthSourceReverse" }, "IDX_HISAUTHREVERSE");

                    b.HasIndex(new[] { "AuthRrnumber" }, "IDX_HISAUTHRRN");

                    b.ToTable("FINS_AUTHORIZATIONMASTER_HIS");
                });

            modelBuilder.Entity("projectMigration.Models.FinsBulkdealerdetail", b =>
                {
                    b.Property<string>("Actionflag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("ACTIONFLAG")
                        .IsFixedLength(true);

                    b.Property<string>("Addedby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<decimal>("BulkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("BULK_ID")
                        .HasDefaultValueSql("\"EFCOREPOC\".\"FINS_BULKDEALERDETAILS_SEQ\".\"NEXTVAL\" ");

                    b.Property<string>("Createdby")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CREATEDBY");

                    b.Property<DateTime?>("Createddate")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATEDDATE");

                    b.Property<string>("DealerDescription")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("DEALER_DESCRIPTION");

                    b.Property<string>("DealerId")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("DEALER_ID");

                    b.Property<string>("DealershortName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("DEALERSHORT_NAME");

                    b.Property<string>("Description")
                        .HasColumnType("CLOB")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Flag")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("FLAG");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("IPADDRESS");

                    b.Property<string>("Modifiedby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<DateTime?>("Modifiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON");

                    b.Property<decimal?>("ProcessingFee")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PROCESSING_FEE");

                    b.Property<string>("Ranking")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("RANKING");

                    b.Property<string>("StatusFlag")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("STATUS_FLAG");

                    b.Property<decimal?>("Uploadid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("UPLOADID");

                    b.Property<string>("Userid")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("USERID");

                    b.HasIndex(new[] { "DealerId" }, "FINS_BULKDEALERDETS_DEALERID");

                    b.ToTable("FINS_BULKDEALERDETAILS");
                });

            modelBuilder.Entity("projectMigration.Models.FinsCardmaster", b =>
                {
                    b.Property<string>("CrdNo")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("CRD_NO");

                    b.Property<string>("CrdAccountId")
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(22)")
                        .HasColumnName("CRD_ACCOUNT_ID");

                    b.Property<DateTime?>("CrdActivationDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_ACTIVATION_DT");

                    b.Property<byte?>("CrdActivationMob")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("CRD_ACTIVATION_MOB");

                    b.Property<string>("CrdAddonParentConsentFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CRD_ADDON_PARENT_CONSENT_FLAG");

                    b.Property<DateTime?>("CrdAddondob")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_ADDONDOB");

                    b.Property<string>("CrdAddondocsFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CRD_ADDONDOCS_FLAG");

                    b.Property<DateTime?>("CrdAddonlastModifyDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_ADDONLAST_MODIFY_DT");

                    b.Property<DateTime?>("CrdAddonmobChangeDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_ADDONMOB_CHANGE_DT");

                    b.Property<string>("CrdAddonmobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CRD_ADDONMOBILE");

                    b.Property<string>("CrdAddonoldMobilNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CRD_ADDONOLD_MOBIL_NO");

                    b.Property<string>("CrdAddonrelationshipPrim")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CRD_ADDONRELATIONSHIP_PRIM");

                    b.Property<string>("CrdAddonresidenceEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CRD_ADDONRESIDENCE_EMAIL");

                    b.Property<string>("CrdBankCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("CRD_BANK_CODE");

                    b.Property<string>("CrdChargedRrn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CRD_CHARGED_RRN");

                    b.Property<DateTime?>("CrdCreaDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_CREA_DT");

                    b.Property<string>("CrdCustId")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("CRD_CUST_ID");

                    b.Property<string>("CrdDealerCd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CRD_DEALER_CD");

                    b.Property<decimal?>("CrdDesign")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CRD_DESIGN");

                    b.Property<long?>("CrdEmiCharges")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CRD_EMI_CHARGES");

                    b.Property<string>("CrdExpDt")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("CRD_EXP_DT");

                    b.Property<string>("CrdFundedNonfunded")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CRD_FUNDED_NONFUNDED");

                    b.Property<string>("CrdGrpDealerCd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CRD_GRP_DEALER_CD");

                    b.Property<string>("CrdGrpDealerName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CRD_GRP_DEALER_NAME");

                    b.Property<DateTime?>("CrdIvrUpd")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_IVR_UPD");

                    b.Property<DateTime?>("CrdLastAuthDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_LAST_AUTH_DT");

                    b.Property<DateTime?>("CrdLastModifyDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_LAST_MODIFY_DT");

                    b.Property<DateTime?>("CrdLastModifyDtBfl")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_LAST_MODIFY_DT_BFL");

                    b.Property<DateTime?>("CrdLastModifyDtWl")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_LAST_MODIFY_DT_WL");

                    b.Property<string>("CrdLatestStatus")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("CRD_LATEST_STATUS");

                    b.Property<string>("CrdManualBlockCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CRD_MANUAL_BLOCK_CODE");

                    b.Property<DateTime?>("CrdManualBlockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_MANUAL_BLOCK_DATE");

                    b.Property<DateTime?>("CrdManualUnblockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_MANUAL_UNBLOCK_DATE");

                    b.Property<string>("CrdManualUnblockReason")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("CRD_MANUAL_UNBLOCK_REASON");

                    b.Property<string>("CrdNameOnCard")
                        .HasMaxLength(26)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(26)")
                        .HasColumnName("CRD_NAME_ON_CARD");

                    b.Property<string>("CrdPin")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("CRD_PIN");

                    b.Property<string>("CrdPrimaryAddOnInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CRD_PRIMARY_ADD_ON_IND");

                    b.Property<DateTime?>("CrdReissueDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_REISSUE_DT");

                    b.Property<string>("CrdReplNewCard")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("CRD_REPL_NEW_CARD");

                    b.Property<string>("CrdReplOldCard")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("CRD_REPL_OLD_CARD");

                    b.Property<string>("CrdSourceInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CRD_SOURCE_IND");

                    b.Property<string>("CrdSrcType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CRD_SRC_TYPE");

                    b.Property<string>("CrdSystemBlockCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CRD_SYSTEM_BLOCK_CODE");

                    b.Property<DateTime?>("CrdSystemBlockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_SYSTEM_BLOCK_DATE");

                    b.Property<DateTime?>("CrdSystemUnblockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_SYSTEM_UNBLOCK_DATE");

                    b.Property<string>("CrdSystemUnblockReason")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("CRD_SYSTEM_UNBLOCK_REASON");

                    b.Property<string>("CrdType")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("CRD_TYPE");

                    b.Property<string>("CrdTypeIdentifier")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CRD_TYPE_IDENTIFIER");

                    b.Property<string>("CrdUserName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("CRD_USER_NAME");

                    b.Property<string>("CrdWecareRefNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CRD_WECARE_REF_NO");

                    b.Property<string>("CrdWrngOtpAttmpt")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("CRD_WRNG_OTP_ATTMPT");

                    b.Property<byte?>("CrdWrngPinAttmpt")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("CRD_WRNG_PIN_ATTMPT");

                    b.HasKey("CrdNo")
                        .HasName("PK_CRD_NO");

                    b.HasIndex(new[] { "CrdAccountId" }, "IDX_CARDACCOUNTNO");

                    b.HasIndex(new[] { "CrdCustId" }, "IDX_CARDCUSTID");

                    b.HasIndex(new[] { "CrdAddonmobile" }, "IDX_CRD_ADDONMOBILE");

                    b.HasIndex(new[] { "CrdPrimaryAddOnInd" }, "IDX_CRD_PRIMARY_ADD_ON_IND");

                    b.ToTable("FINS_CARDMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsClientmaster", b =>
                {
                    b.Property<string>("CliCustId")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("CLI_CUST_ID");

                    b.Property<DateTime?>("CliAnnualFeeDueDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_ANNUAL_FEE_DUE_DT");

                    b.Property<string>("CliBankcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("CLI_BANKCODE");

                    b.Property<DateTime?>("CliBaseLoanFdd")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_BASE_LOAN_FDD");

                    b.Property<string>("CliBaseLoanNumber")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("CLI_BASE_LOAN_NUMBER");

                    b.Property<DateTime?>("CliBlockClassModifyDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_BLOCK_CLASS_MODIFY_DT");

                    b.Property<string>("CliBlockClassification")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("CLI_BLOCK_CLASSIFICATION");

                    b.Property<string>("CliBranchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CLI_BRANCH_ID");

                    b.Property<string>("CliBscore")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CLI_BSCORE");

                    b.Property<string>("CliCcNccFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_CC_NCC_FLAG");

                    b.Property<string>("CliCibilScore")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_CIBIL_SCORE");

                    b.Property<DateTime?>("CliCibilScoreDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_CIBIL_SCORE_DATE");

                    b.Property<string>("CliCibilScoreSource")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_CIBIL_SCORE_SOURCE");

                    b.Property<int?>("CliCibilv3Score")
                        .HasPrecision(6)
                        .HasColumnType("NUMBER(6)")
                        .HasColumnName("CLI_CIBILV3_SCORE");

                    b.Property<DateTime?>("CliCreationDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_CREATION_DATE");

                    b.Property<string>("CliCredcrdKycFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_CREDCRD_KYC_FLAG");

                    b.Property<string>("CliCredcrdOfrBflccid")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(18)")
                        .HasColumnName("CLI_CREDCRD_OFR_BFLCCID");

                    b.Property<long?>("CliCredcrdOfrLim")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_CREDCRD_OFR_LIM");

                    b.Property<string>("CliCredcrdOfrType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_CREDCRD_OFR_TYPE");

                    b.Property<long?>("CliCredcrdOtbl")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_CREDCRD_OTBL");

                    b.Property<string>("CliCredcrdPancopyExist")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_CREDCRD_PANCOPY_EXIST");

                    b.Property<short?>("CliCredcrdSplOffer")
                        .HasPrecision(5)
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("CLI_CREDCRD_SPL_OFFER");

                    b.Property<long?>("CliCreditLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_CREDIT_LIMIT");

                    b.Property<int?>("CliCreditRewardsPts")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CLI_CREDIT_REWARDS_PTS");

                    b.Property<DateTime?>("CliCtrChargedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_CTR_CHARGED_DATE");

                    b.Property<DateTime?>("CliDedupeDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_DEDUPE_DATE");

                    b.Property<string>("CliDedupeFromId")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("CLI_DEDUPE_FROM_ID");

                    b.Property<decimal?>("CliDedupeToId")
                        .HasColumnType("NUMBER(30)")
                        .HasColumnName("CLI_DEDUPE_TO_ID");

                    b.Property<string>("CliDndEmail")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_DND_EMAIL");

                    b.Property<string>("CliDndSms")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_DND_SMS");

                    b.Property<DateTime?>("CliDob")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_DOB");

                    b.Property<DateTime?>("CliDocsDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_DOCS_DATE");

                    b.Property<string>("CliDocsFlagRrn")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(14)")
                        .HasColumnName("CLI_DOCS_FLAG_RRN");

                    b.Property<string>("CliDocsPendingFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_DOCS_PENDING_FLAG");

                    b.Property<string>("CliEcsAccountNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CLI_ECS_ACCOUNT_NO");

                    b.Property<long?>("CliEcsAuthBlocked")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_ECS_AUTH_BLOCKED");

                    b.Property<long?>("CliEcsAvailableLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_ECS_AVAILABLE_LIMIT");

                    b.Property<string>("CliEcsBankBranchName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_ECS_BANK_BRANCH_NAME");

                    b.Property<string>("CliEcsBankName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_ECS_BANK_NAME");

                    b.Property<DateTime?>("CliEcsExpiryDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_ECS_EXPIRY_DATE");

                    b.Property<string>("CliEcsIfscCode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_ECS_IFSC_CODE");

                    b.Property<long?>("CliEcsLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_ECS_LIMIT");

                    b.Property<long?>("CliEcsLoanBlocked")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_ECS_LOAN_BLOCKED");

                    b.Property<string>("CliEcsMicrCode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_ECS_MICR_CODE");

                    b.Property<string>("CliEcsRegNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CLI_ECS_REG_NO");

                    b.Property<DateTime?>("CliEcsUpdateDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_ECS_UPDATE_DATE");

                    b.Property<string>("CliEcsUpdateMode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("CLI_ECS_UPDATE_MODE");

                    b.Property<DateTime?>("CliEndDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_END_DATE");

                    b.Property<string>("CliFirstName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_FIRST_NAME");

                    b.Property<string>("CliFraudProneFlag")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("CLI_FRAUD_PRONE_FLAG");

                    b.Property<string>("CliGender")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("CLI_GENDER");

                    b.Property<string>("CliImpsFirstHolderName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CLI_IMPS_FIRST_HOLDER_NAME");

                    b.Property<string>("CliImpsSecondHolderName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CLI_IMPS_SECOND_HOLDER_NAME");

                    b.Property<string>("CliInstaRrn")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(14)")
                        .HasColumnName("CLI_INSTA_RRN");

                    b.Property<DateTime?>("CliIvrUpd")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_IVR_UPD");

                    b.Property<DateTime?>("CliLastAuthDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_LAST_AUTH_DATE");

                    b.Property<DateTime?>("CliLastLoanDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_LAST_LOAN_DATE");

                    b.Property<DateTime?>("CliLastModifyDtBfl")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_LAST_MODIFY_DT_BFL");

                    b.Property<DateTime?>("CliLastModifyDtWl")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_LAST_MODIFY_DT_WL");

                    b.Property<string>("CliLastName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_LAST_NAME");

                    b.Property<string>("CliMailingAddr")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_MAILING_ADDR");

                    b.Property<string>("CliManualBlockCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(6)")
                        .HasColumnName("CLI_MANUAL_BLOCK_CODE")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("CliManualBlockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_MANUAL_BLOCK_DATE");

                    b.Property<DateTime?>("CliManualUnblockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_MANUAL_UNBLOCK_DATE");

                    b.Property<string>("CliManualUnblockReason")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("CLI_MANUAL_UNBLOCK_REASON");

                    b.Property<string>("CliMiddleName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_MIDDLE_NAME");

                    b.Property<string>("CliMoratPaymentFlag")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_MORAT_PAYMENT_FLAG");

                    b.Property<short?>("CliNoOfActiveLoans")
                        .HasPrecision(5)
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("CLI_NO_OF_ACTIVE_LOANS");

                    b.Property<decimal?>("CliNoOfLinkedCust")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CLI_NO_OF_LINKED_CUST");

                    b.Property<string>("CliOfcAddr1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_OFC_ADDR1");

                    b.Property<string>("CliOfcAddr2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_OFC_ADDR2");

                    b.Property<string>("CliOfcAddr3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_OFC_ADDR3");

                    b.Property<DateTime?>("CliOfcAddrDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_OFC_ADDR_DATE");

                    b.Property<string>("CliOfcArea")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_OFC_AREA");

                    b.Property<int?>("CliOfcCityId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CLI_OFC_CITY_ID");

                    b.Property<string>("CliOfcEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_OFC_EMAIL");

                    b.Property<DateTime?>("CliOfcEmailDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_OFC_EMAIL_DATE");

                    b.Property<string>("CliOfcLandmark")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_OFC_LANDMARK");

                    b.Property<string>("CliOfcMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_OFC_MOBILE");

                    b.Property<DateTime?>("CliOfcMobileChgDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_OFC_MOBILE_CHG_DATE");

                    b.Property<string>("CliOfcPhone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_OFC_PHONE");

                    b.Property<int?>("CliOfcPincode")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CLI_OFC_PINCODE");

                    b.Property<int?>("CliOfcStateId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CLI_OFC_STATE_ID");

                    b.Property<string>("CliOfcStd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_OFC_STD");

                    b.Property<string>("CliOldOfcMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_OLD_OFC_MOBILE");

                    b.Property<string>("CliOldResMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_OLD_RES_MOBILE");

                    b.Property<string>("CliPanNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_PAN_NO");

                    b.Property<string>("CliPanStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_PAN_STATUS");

                    b.Property<string>("CliReKycFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_RE_KYC_FLAG");

                    b.Property<string>("CliResAddr1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_RES_ADDR1");

                    b.Property<string>("CliResAddr2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_RES_ADDR2");

                    b.Property<string>("CliResAddr3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_RES_ADDR3");

                    b.Property<DateTime?>("CliResAddrChgDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_RES_ADDR_CHG_DATE");

                    b.Property<string>("CliResArea")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_RES_AREA");

                    b.Property<int?>("CliResCityId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CLI_RES_CITY_ID");

                    b.Property<string>("CliResEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_RES_EMAIL");

                    b.Property<DateTime?>("CliResEmailDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_RES_EMAIL_DATE");

                    b.Property<string>("CliResLandmark")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_RES_LANDMARK");

                    b.Property<string>("CliResMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_RES_MOBILE");

                    b.Property<DateTime?>("CliResMobileChgDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_RES_MOBILE_CHG_DATE");

                    b.Property<string>("CliResPhone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_RES_PHONE");

                    b.Property<int?>("CliResPincode")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CLI_RES_PINCODE");

                    b.Property<int?>("CliResStateId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CLI_RES_STATE_ID");

                    b.Property<string>("CliResStd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_RES_STD");

                    b.Property<string>("CliSdkSegment")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("CLI_SDK_SEGMENT");

                    b.Property<DateTime?>("CliSdkSegmentDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_SDK_SEGMENT_DATE");

                    b.Property<string>("CliSmtFlag")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("CLI_SMT_FLAG");

                    b.Property<DateTime?>("CliStartDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_START_DATE");

                    b.Property<string>("CliStatus")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("CLI_STATUS");

                    b.Property<string>("CliSystemBlockCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("CLI_SYSTEM_BLOCK_CODE");

                    b.Property<DateTime?>("CliSystemBlockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_SYSTEM_BLOCK_DATE");

                    b.Property<DateTime?>("CliSystemUnblockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_SYSTEM_UNBLOCK_DATE");

                    b.Property<string>("CliSystemUnblockReason")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("CLI_SYSTEM_UNBLOCK_REASON");

                    b.Property<string>("CliTitle")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("CLI_TITLE");

                    b.Property<long?>("CliTotalAuthBlocked")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_TOTAL_AUTH_BLOCKED");

                    b.Property<long?>("CliTotalLoanBlocked")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_TOTAL_LOAN_BLOCKED");

                    b.Property<string>("CliTxnScore")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CLI_TXN_SCORE");

                    b.Property<string>("CliType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_TYPE");

                    b.Property<string>("CliUid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CLI_UID");

                    b.Property<string>("CliVehicleRegistration")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_VEHICLE_REGISTRATION");

                    b.Property<bool?>("CliVehicleType")
                        .HasPrecision(1)
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("CLI_VEHICLE_TYPE");

                    b.HasKey("CliCustId")
                        .HasName("PK_CLI_CUST_ID");

                    b.HasIndex(new[] { "CliResMobile" }, "IDX_CUSTRESIMOBILE");

                    b.ToTable("FINS_CLIENTMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsCreditprogrammapping", b =>
                {
                    b.Property<string>("Addedby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Carddesign")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CARDDESIGN");

                    b.Property<string>("Creditprogram")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREDITPROGRAM");

                    b.Property<string>("Customertype")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CUSTOMERTYPE");

                    b.Property<string>("Modifiedby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<DateTime?>("Modifiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON");

                    b.Property<string>("Processtype")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("PROCESSTYPE");

                    b.Property<decimal?>("SrNo")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SR_NO");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("STATUS")
                        .IsFixedLength(true);

                    b.ToTable("FINS_CREDITPROGRAMMAPPING");
                });

            modelBuilder.Entity("projectMigration.Models.FinsDealermanfmapping", b =>
                {
                    b.Property<decimal>("Supplierid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SUPPLIERID");

                    b.Property<decimal>("ManufacturerId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MANUFACTURER_ID");

                    b.Property<decimal?>("Addedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<decimal?>("Bankpk")
                        .HasColumnType("NUMBER")
                        .HasColumnName("BANKPK");

                    b.Property<decimal?>("DlrMnfmapid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DLR_MNFMAPID");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("IPADDRESS");

                    b.Property<decimal?>("Modifiedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<DateTime?>("Modifiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON");

                    b.Property<DateTime?>("Processeddate")
                        .HasColumnType("DATE")
                        .HasColumnName("PROCESSEDDATE");

                    b.Property<string>("RecordStatusFlag")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("RECORD_STATUS_FLAG");

                    b.Property<string>("Uploadid")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("UPLOADID");

                    b.HasKey("Supplierid", "ManufacturerId")
                        .HasName("CMPPKFINSDEALERMANFMAPPING");

                    b.ToTable("FINS_DEALERMANFMAPPING");
                });

            modelBuilder.Entity("projectMigration.Models.FinsDealermappingmaster", b =>
                {
                    b.Property<decimal?>("Addedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Code")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("CODE");

                    b.Property<decimal>("Delmapseq")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DELMAPSEQ");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("IPADDRESS");

                    b.Property<decimal?>("Modefiedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODEFIEDBY");

                    b.Property<DateTime?>("Modefiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODEFIEDON");

                    b.Property<string>("RecordType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("RECORD_TYPE");

                    b.Property<decimal>("Supplierid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SUPPLIERID");

                    b.Property<string>("Uploadid")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("UPLOADID");

                    b.HasIndex(new[] { "Supplierid" }, "IDX_SUPPLIERIDDMAPPING");

                    b.ToTable("FINS_DEALERMAPPINGMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsDealermaster", b =>
                {
                    b.Property<decimal>("Bflprofileid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("BFLPROFILEID");

                    b.Property<string>("AcquringChannel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("ACQURING_CHANNEL");

                    b.Property<string>("AddedIp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ADDED_IP");

                    b.Property<decimal?>("Addedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDEDBY");

                    b.Property<string>("Addedon")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Address1")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(120)")
                        .HasColumnName("ADDRESS1");

                    b.Property<string>("Address2")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(120)")
                        .HasColumnName("ADDRESS2");

                    b.Property<string>("Address3")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(120)")
                        .HasColumnName("ADDRESS3");

                    b.Property<string>("Address4")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(120)")
                        .HasColumnName("ADDRESS4");

                    b.Property<int?>("AssetCatgId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("ASSET_CATG_ID");

                    b.Property<string>("AssetModel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("ASSET_MODEL");

                    b.Property<decimal?>("AssetSrNo")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ASSET_SR_NO");

                    b.Property<string>("CashFunding")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CASH_FUNDING");

                    b.Property<string>("ChkmakStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CHKMAK_STATUS");

                    b.Property<string>("City")
                        .HasMaxLength(105)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(105)")
                        .HasColumnName("CITY");

                    b.Property<string>("Classification")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CLASSIFICATION");

                    b.Property<string>("CoBrandCardCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("CO_BRAND_CARD_CODE");

                    b.Property<string>("CoBrandLimitFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CO_BRAND_LIMIT_FLAG");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CONTACT_PERSON");

                    b.Property<byte?>("ConvFeeIdentifier")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("CONV_FEE_IDENTIFIER");

                    b.Property<string>("DealerEmail")
                        .HasMaxLength(105)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(105)")
                        .HasColumnName("DEALER_EMAIL");

                    b.Property<string>("DealerGrpDesc")
                        .HasMaxLength(105)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(105)")
                        .HasColumnName("DEALER_GRP_DESC");

                    b.Property<int?>("DealerGrpId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("DEALER_GRP_ID");

                    b.Property<string>("DealerSupergroup")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("DEALER_SUPERGROUP");

                    b.Property<string>("DealerUploadFlag")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("DEALER_UPLOAD_FLAG")
                        .HasDefaultValueSql("'N'");

                    b.Property<string>("DealerUploadRejections")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("DEALER_UPLOAD_REJECTIONS");

                    b.Property<string>("DiyAmount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("DIY_AMOUNT");

                    b.Property<string>("DiyFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("DIY_FLAG");

                    b.Property<DateTime?>("DiyFlagDate")
                        .HasColumnType("DATE")
                        .HasColumnName("DIY_FLAG_DATE");

                    b.Property<string>("DummyLanno")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(18)")
                        .HasColumnName("DUMMY_LANNO");

                    b.Property<string>("ExistingBank")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("EXISTING_BANK");

                    b.Property<string>("ExistingMid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("EXISTING_MID");

                    b.Property<string>("ExistingTid")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("EXISTING_TID");

                    b.Property<string>("FinancingType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("FINANCING_TYPE");

                    b.Property<string>("Financingtypecode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("FINANCINGTYPECODE");

                    b.Property<int?>("Location")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("LOCATION");

                    b.Property<string>("LoyalityProgApplicable")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("LOYALITY_PROG_APPLICABLE");

                    b.Property<string>("MerchantCategory")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("MERCHANT_CATEGORY");

                    b.Property<string>("Mid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("MID");

                    b.Property<string>("Mobile")
                        .HasMaxLength(105)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(105)")
                        .HasColumnName("MOBILE");

                    b.Property<string>("ModifedIp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("MODIFED_IP");

                    b.Property<decimal?>("Modifiedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<string>("Modifiedon")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("MODIFIEDON");

                    b.Property<byte?>("NoOfTerminal")
                        .HasPrecision(2)
                        .HasColumnType("NUMBER(2)")
                        .HasColumnName("NO_OF_TERMINAL");

                    b.Property<string>("Pan")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("PAN");

                    b.Property<string>("Phone1")
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2048)")
                        .HasColumnName("PHONE1");

                    b.Property<string>("PreferredLimitFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("PREFERRED_LIMIT_FLAG");

                    b.Property<string>("ProcessType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("PROCESS_TYPE");

                    b.Property<string>("RecordStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("RECORD_STATUS");

                    b.Property<string>("RecordType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("RECORD_TYPE");

                    b.Property<string>("RejectionReason")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("REJECTION_REASON");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(300)")
                        .HasColumnName("REMARKS");

                    b.Property<string>("RemiFlag")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("REMI_FLAG")
                        .HasDefaultValueSql("'N'");

                    b.Property<string>("RemiRejections")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("REMI_REJECTIONS");

                    b.Property<string>("RewardRedemptionApplicable")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("REWARD_REDEMPTION_APPLICABLE");

                    b.Property<decimal?>("RewardRedemptionFee")
                        .HasColumnType("NUMBER(5,2)")
                        .HasColumnName("REWARD_REDEMPTION_FEE");

                    b.Property<string>("RiskIndicator")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("RISK_INDICATOR");

                    b.Property<string>("ServingCities")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("SERVING_CITIES");

                    b.Property<string>("State")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("STATE");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("STATUS");

                    b.Property<string>("Stdisd")
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(48)")
                        .HasColumnName("STDISD");

                    b.Property<string>("StoreId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("STORE_ID");

                    b.Property<int?>("SupplierBranch")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SUPPLIER_BRANCH");

                    b.Property<string>("SupplierDealerFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("SUPPLIER_DEALER_FLAG");

                    b.Property<string>("Supplierdesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("SUPPLIERDESC");

                    b.Property<int>("Supplierid")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("SUPPLIERID");

                    b.Property<string>("Suppliertype")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("SUPPLIERTYPE");

                    b.Property<string>("Tid")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("TID");

                    b.Property<string>("Typeofrequest")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("TYPEOFREQUEST");

                    b.Property<int?>("Zipcode")
                        .HasPrecision(6)
                        .HasColumnType("NUMBER(6)")
                        .HasColumnName("ZIPCODE");

                    b.HasKey("Bflprofileid")
                        .HasName("FINS_DEALERMASTER_PK");

                    b.HasIndex(new[] { "Tid" }, "IDXDEALERPROFTID");

                    b.HasIndex(new[] { "Zipcode" }, "IDX_DEALERZIP");

                    b.HasIndex(new[] { "Mid" }, "INDEXDEALERPROFMID");

                    b.HasIndex(new[] { "Supplierid" }, "SYS_C0048755")
                        .IsUnique();

                    b.ToTable("FINS_DEALERMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsDealershortname", b =>
                {
                    b.Property<string>("Dealercode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("DEALERCODE");

                    b.Property<DateTime?>("Addedon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON")
                        .HasDefaultValueSql("sysdate");

                    b.Property<string>("Dealershortname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("DEALERSHORTNAME");

                    b.Property<decimal?>("Dshortseq")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("DSHORTSEQ")
                        .HasDefaultValueSql("\"EFCOREPOC\".\"SEQ_DSHORTSEQ\".\"NEXTVAL\"");

                    b.Property<DateTime?>("Modifiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON");

                    b.HasKey("Dealercode")
                        .HasName("CONST_DEALERCODESHORT");

                    b.ToTable("FINS_DEALERSHORTNAME");
                });

            modelBuilder.Entity("projectMigration.Models.FinsEcommOtp", b =>
                {
                    b.Property<decimal>("Otpid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("OTPID");

                    b.Property<DateTime?>("Adddatetime")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDDATETIME");

                    b.Property<decimal?>("AttemptCounter")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ATTEMPT_COUNTER");

                    b.Property<string>("Authcode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTHCODE");

                    b.Property<string>("CardStatus")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("CARD_STATUS");

                    b.Property<string>("Cardnumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CARDNUMBER");

                    b.Property<string>("Cardtype")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("CARDTYPE");

                    b.Property<string>("Dealerid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("DEALERID");

                    b.Property<DateTime?>("Finaldatetime")
                        .HasColumnType("DATE")
                        .HasColumnName("FINALDATETIME");

                    b.Property<decimal?>("GenerateCounter")
                        .HasColumnType("NUMBER")
                        .HasColumnName("GENERATE_COUNTER");

                    b.Property<string>("Mobileno")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("MOBILENO");

                    b.Property<string>("Nooftransaction")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("NOOFTRANSACTION");

                    b.Property<DateTime?>("OtpReqdatetime")
                        .HasColumnType("DATE")
                        .HasColumnName("OTP_REQDATETIME");

                    b.Property<string>("OtpStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("OTP_STATUS");

                    b.Property<string>("Otprrn")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(70)")
                        .HasColumnName("OTPRRN");

                    b.Property<string>("Otpvalue")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("OTPVALUE");

                    b.Property<string>("Responseid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("RESPONSEID");

                    b.Property<string>("Servicetype")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("SERVICETYPE");

                    b.Property<string>("Trantype")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("TRANTYPE");

                    b.Property<string>("Utilizecount")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("UTILIZECOUNT");

                    b.Property<DateTime?>("Utilizedatetime")
                        .HasColumnType("DATE")
                        .HasColumnName("UTILIZEDATETIME");

                    b.HasKey("Otpid")
                        .HasName("PRI_ECOMOTPID");

                    b.HasIndex(new[] { "Cardnumber" }, "IDX_ECOMOTPCARD");

                    b.HasIndex(new[] { "Dealerid" }, "IDX_ECOMOTPDEALERID");

                    b.HasIndex(new[] { "Servicetype" }, "IDX_ECOMOTPSERVICETP");

                    b.HasIndex(new[] { "OtpStatus" }, "IDX_ECOMOTPSTATUS");

                    b.HasIndex(new[] { "Trantype" }, "IDX_ECOMOTPTRANTYPE");

                    b.ToTable("FINS_ECOMM_OTP");
                });

            modelBuilder.Entity("projectMigration.Models.FinsEcsconfigday", b =>
                {
                    b.Property<DateTime?>("Addeddate")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDDATE");

                    b.Property<string>("Ecsconfigdays")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("ECSCONFIGDAYS");

                    b.ToTable("FINS_ECSCONFIGDAYS");
                });

            modelBuilder.Entity("projectMigration.Models.FinsEmiFeeLogicStip", b =>
                {
                    b.Property<string>("AuthChargeAmt2")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_AMT2");

                    b.Property<string>("AuthChargeAmt4")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_AMT4");

                    b.Property<string>("AuthChargeAmt5")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_AMT5");

                    b.Property<string>("AuthChargeId2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID2");

                    b.Property<string>("AuthChargeId4")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID4");

                    b.Property<string>("AuthChargeId5")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID5");

                    b.Property<string>("ConvApplicable")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CONV_APPLICABLE");

                    b.Property<decimal?>("ConvFeeIdentifier")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CONV_FEE_IDENTIFIER");

                    b.Property<string>("CrdType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CRD_TYPE");

                    b.Property<string>("CtrApplicable")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CTR_APPLICABLE");

                    b.Property<decimal?>("MaximumAmount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MAXIMUM_AMOUNT");

                    b.Property<decimal?>("MinimumAmount")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MINIMUM_AMOUNT");

                    b.Property<decimal?>("Seqid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SEQID");

                    b.Property<string>("SmsText")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("SMS_TEXT");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("STATUS");

                    b.Property<string>("TxnType")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("TXN_TYPE");

                    b.ToTable("FINS_EMI_FEE_LOGIC_STIP");
                });

            modelBuilder.Entity("projectMigration.Models.FinsGetdealerkey", b =>
                {
                    b.Property<decimal>("Dealerid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DEALERID");

                    b.Property<decimal?>("Addedon")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDEDON");

                    b.Property<DateTime?>("Addedondate")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDONDATE");

                    b.Property<DateTime?>("Addedontime")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDONTIME");

                    b.Property<decimal>("Keyseq")
                        .HasColumnType("NUMBER")
                        .HasColumnName("KEYSEQ");

                    b.Property<string>("Keytype")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("KEYTYPE");

                    b.Property<string>("Modulename")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("MODULENAME");

                    b.Property<string>("Securitykey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("SECURITYKEY");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("STATUS");

                    b.HasKey("Dealerid")
                        .HasName("FINS_GETDEALERKEY_PK");

                    b.HasIndex(new[] { "Securitykey" }, "IDX_SECURITYKEY");

                    b.ToTable("FINS_GETDEALERKEY");
                });

            modelBuilder.Entity("projectMigration.Models.FinsInactaccountmaster", b =>
                {
                    b.Property<string>("AccId")
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(22)")
                        .HasColumnName("ACC_ID");

                    b.Property<long?>("AccAdjLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_ADJ_LIMIT");

                    b.Property<DateTime?>("AccAdjLimitDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_ADJ_LIMIT_DATE");

                    b.Property<string>("AccBankcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("ACC_BANKCODE");

                    b.Property<long?>("AccBestLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_BEST_LIMIT");

                    b.Property<DateTime?>("AccBlockClassModifyDt")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_BLOCK_CLASS_MODIFY_DT");

                    b.Property<string>("AccBlockClassification")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("ACC_BLOCK_CLASSIFICATION");

                    b.Property<DateTime?>("AccCreationDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_CREATION_DATE");

                    b.Property<string>("AccCreditLimUpdSrc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("ACC_CREDIT_LIM_UPD_SRC");

                    b.Property<long?>("AccCreditLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_CREDIT_LIMIT");

                    b.Property<DateTime?>("AccCreditLimtChgDt")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_CREDIT_LIMT_CHG_DT");

                    b.Property<string>("AccCustId")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("ACC_CUST_ID");

                    b.Property<DateTime?>("AccEndDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_END_DATE");

                    b.Property<DateTime?>("AccFirstTxnDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_FIRST_TXN_DATE");

                    b.Property<long?>("AccFirstTxnLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_FIRST_TXN_LIMIT");

                    b.Property<string>("AccFirstTxnRrn")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(14)")
                        .HasColumnName("ACC_FIRST_TXN_RRN");

                    b.Property<DateTime?>("AccIvrUpd")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_IVR_UPD");

                    b.Property<DateTime?>("AccLastAuthDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_LAST_AUTH_DATE");

                    b.Property<DateTime?>("AccLastModifyDtBfl")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_LAST_MODIFY_DT_BFL");

                    b.Property<DateTime?>("AccLastModifyDtWl")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_LAST_MODIFY_DT_WL");

                    b.Property<string>("AccManualBlockCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(6)")
                        .HasColumnName("ACC_MANUAL_BLOCK_CODE")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("AccManualBlockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_MANUAL_BLOCK_DATE");

                    b.Property<DateTime?>("AccManualUnblockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_MANUAL_UNBLOCK_DATE");

                    b.Property<string>("AccManualUnblockReason")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("ACC_MANUAL_UNBLOCK_REASON");

                    b.Property<string>("AccNameChmpChllg")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ACC_NAME_CHMP_CHLLG");

                    b.Property<string>("AccNoOfAddonCards")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("ACC_NO_OF_ADDON_CARDS");

                    b.Property<string>("AccOldestActPriCard")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(16)")
                        .HasColumnName("ACC_OLDEST_ACT_PRI_CARD");

                    b.Property<DateTime?>("AccProcDevEndDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_PROC_DEV_END_DATE");

                    b.Property<string>("AccProcDevFlag")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("ACC_PROC_DEV_FLAG");

                    b.Property<DateTime?>("AccStartDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_START_DATE");

                    b.Property<string>("AccSystemBlockCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(6)")
                        .HasColumnName("ACC_SYSTEM_BLOCK_CODE")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("AccSystemBlockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_SYSTEM_BLOCK_DATE");

                    b.Property<DateTime?>("AccSystemUnblockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_SYSTEM_UNBLOCK_DATE");

                    b.Property<string>("AccSystemUnblockReason")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("ACC_SYSTEM_UNBLOCK_REASON");

                    b.Property<long?>("AccTempLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_TEMP_LIMIT");

                    b.Property<DateTime?>("AccTempLimitEndDt")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_TEMP_LIMIT_END_DT");

                    b.Property<DateTime?>("AccTempLimitStartDt")
                        .HasColumnType("DATE")
                        .HasColumnName("ACC_TEMP_LIMIT_START_DT");

                    b.Property<long?>("AccTotalAuthBlocked")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_TOTAL_AUTH_BLOCKED");

                    b.Property<long?>("AccTotalLoanBlocked")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("ACC_TOTAL_LOAN_BLOCKED");

                    b.Property<string>("AccTotalNoOfCards")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("ACC_TOTAL_NO_OF_CARDS");

                    b.Property<string>("AccType")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("ACC_TYPE");

                    b.Property<string>("AccVipNonvipFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("ACC_VIP_NONVIP_FLAG");

                    b.HasKey("AccId")
                        .HasName("PK_INACTACC_ID");

                    b.HasIndex(new[] { "AccCustId" }, "IDX_INACTACCOUNTCUSTID");

                    b.ToTable("FINS_INACTACCOUNTMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsInactcardmaster", b =>
                {
                    b.Property<string>("CrdNo")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("CRD_NO");

                    b.Property<string>("CrdAccountId")
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(22)")
                        .HasColumnName("CRD_ACCOUNT_ID");

                    b.Property<DateTime?>("CrdActivationDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_ACTIVATION_DT");

                    b.Property<byte?>("CrdActivationMob")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("CRD_ACTIVATION_MOB");

                    b.Property<string>("CrdAddonParentConsentFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CRD_ADDON_PARENT_CONSENT_FLAG");

                    b.Property<DateTime?>("CrdAddondob")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_ADDONDOB");

                    b.Property<string>("CrdAddondocsFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CRD_ADDONDOCS_FLAG");

                    b.Property<DateTime?>("CrdAddonlastModifyDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_ADDONLAST_MODIFY_DT");

                    b.Property<DateTime?>("CrdAddonmobChangeDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_ADDONMOB_CHANGE_DT");

                    b.Property<string>("CrdAddonmobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CRD_ADDONMOBILE");

                    b.Property<string>("CrdAddonoldMobilNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CRD_ADDONOLD_MOBIL_NO");

                    b.Property<string>("CrdAddonrelationshipPrim")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CRD_ADDONRELATIONSHIP_PRIM");

                    b.Property<string>("CrdAddonresidenceEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CRD_ADDONRESIDENCE_EMAIL");

                    b.Property<string>("CrdBankCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("CRD_BANK_CODE");

                    b.Property<string>("CrdChargedRrn")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CRD_CHARGED_RRN");

                    b.Property<DateTime?>("CrdCreaDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_CREA_DT");

                    b.Property<string>("CrdCustId")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("CRD_CUST_ID");

                    b.Property<string>("CrdDealerCd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CRD_DEALER_CD");

                    b.Property<decimal?>("CrdDesign")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CRD_DESIGN");

                    b.Property<long?>("CrdEmiCharges")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CRD_EMI_CHARGES");

                    b.Property<string>("CrdExpDt")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("CRD_EXP_DT");

                    b.Property<string>("CrdFundedNonfunded")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CRD_FUNDED_NONFUNDED");

                    b.Property<string>("CrdGrpDealerCd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CRD_GRP_DEALER_CD");

                    b.Property<string>("CrdGrpDealerName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("CRD_GRP_DEALER_NAME");

                    b.Property<DateTime?>("CrdIvrUpd")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_IVR_UPD");

                    b.Property<DateTime?>("CrdLastAuthDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_LAST_AUTH_DT");

                    b.Property<DateTime?>("CrdLastModifyDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_LAST_MODIFY_DT");

                    b.Property<DateTime?>("CrdLastModifyDtBfl")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_LAST_MODIFY_DT_BFL");

                    b.Property<DateTime?>("CrdLastModifyDtWl")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_LAST_MODIFY_DT_WL");

                    b.Property<string>("CrdLatestStatus")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("CRD_LATEST_STATUS");

                    b.Property<string>("CrdManualBlockCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CRD_MANUAL_BLOCK_CODE");

                    b.Property<DateTime?>("CrdManualBlockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_MANUAL_BLOCK_DATE");

                    b.Property<DateTime?>("CrdManualUnblockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_MANUAL_UNBLOCK_DATE");

                    b.Property<string>("CrdManualUnblockReason")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("CRD_MANUAL_UNBLOCK_REASON");

                    b.Property<string>("CrdNameOnCard")
                        .HasMaxLength(26)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(26)")
                        .HasColumnName("CRD_NAME_ON_CARD");

                    b.Property<string>("CrdPin")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("CRD_PIN");

                    b.Property<string>("CrdPrimaryAddOnInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CRD_PRIMARY_ADD_ON_IND");

                    b.Property<DateTime?>("CrdReissueDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_REISSUE_DT");

                    b.Property<string>("CrdReplNewCard")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("CRD_REPL_NEW_CARD");

                    b.Property<string>("CrdReplOldCard")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("CRD_REPL_OLD_CARD");

                    b.Property<string>("CrdSourceInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CRD_SOURCE_IND");

                    b.Property<string>("CrdSrcType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CRD_SRC_TYPE");

                    b.Property<string>("CrdSystemBlockCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CRD_SYSTEM_BLOCK_CODE");

                    b.Property<DateTime?>("CrdSystemBlockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_SYSTEM_BLOCK_DATE");

                    b.Property<DateTime?>("CrdSystemUnblockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CRD_SYSTEM_UNBLOCK_DATE");

                    b.Property<string>("CrdSystemUnblockReason")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("CRD_SYSTEM_UNBLOCK_REASON");

                    b.Property<string>("CrdType")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("CRD_TYPE");

                    b.Property<string>("CrdTypeIdentifier")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CRD_TYPE_IDENTIFIER");

                    b.Property<string>("CrdUserName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("CRD_USER_NAME");

                    b.Property<string>("CrdWecareRefNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CRD_WECARE_REF_NO");

                    b.Property<string>("CrdWrngOtpAttmpt")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("CRD_WRNG_OTP_ATTMPT");

                    b.Property<byte?>("CrdWrngPinAttmpt")
                        .HasPrecision(3)
                        .HasColumnType("NUMBER(3)")
                        .HasColumnName("CRD_WRNG_PIN_ATTMPT");

                    b.HasKey("CrdNo")
                        .HasName("PK_INACTCRD_NO");

                    b.HasIndex(new[] { "CrdAccountId" }, "IDX_INACTCARDACCOUNTNO");

                    b.HasIndex(new[] { "CrdCustId" }, "IDX_INACTCARDCUSTID");

                    b.ToTable("FINS_INACTCARDMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsInactclientmaster", b =>
                {
                    b.Property<string>("CliCustId")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("CLI_CUST_ID");

                    b.Property<short?>("CcliCredcrdSplOffer")
                        .HasPrecision(5)
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("CCLI_CREDCRD_SPL_OFFER");

                    b.Property<DateTime?>("CliAnnualFeeDueDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_ANNUAL_FEE_DUE_DT");

                    b.Property<string>("CliBankcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("CLI_BANKCODE");

                    b.Property<DateTime?>("CliBaseLoanFdd")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_BASE_LOAN_FDD");

                    b.Property<string>("CliBaseLoanNumber")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("CLI_BASE_LOAN_NUMBER");

                    b.Property<DateTime?>("CliBlockClassModifyDt")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_BLOCK_CLASS_MODIFY_DT");

                    b.Property<string>("CliBlockClassification")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("CLI_BLOCK_CLASSIFICATION");

                    b.Property<string>("CliBranchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CLI_BRANCH_ID");

                    b.Property<string>("CliBscore")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CLI_BSCORE");

                    b.Property<string>("CliCcNccFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_CC_NCC_FLAG");

                    b.Property<string>("CliCibilScore")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_CIBIL_SCORE");

                    b.Property<DateTime?>("CliCibilScoreDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_CIBIL_SCORE_DATE");

                    b.Property<string>("CliCibilScoreSource")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_CIBIL_SCORE_SOURCE");

                    b.Property<int?>("CliCibilv3Score")
                        .HasPrecision(6)
                        .HasColumnType("NUMBER(6)")
                        .HasColumnName("CLI_CIBILV3_SCORE");

                    b.Property<DateTime?>("CliCreationDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_CREATION_DATE");

                    b.Property<string>("CliCredcrdKycFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_CREDCRD_KYC_FLAG");

                    b.Property<string>("CliCredcrdOfrBflccid")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(18)")
                        .HasColumnName("CLI_CREDCRD_OFR_BFLCCID");

                    b.Property<long?>("CliCredcrdOfrLim")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_CREDCRD_OFR_LIM");

                    b.Property<string>("CliCredcrdOfrType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_CREDCRD_OFR_TYPE");

                    b.Property<long?>("CliCredcrdOtbl")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_CREDCRD_OTBL");

                    b.Property<string>("CliCredcrdPancopyExist")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_CREDCRD_PANCOPY_EXIST");

                    b.Property<long?>("CliCreditLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_CREDIT_LIMIT");

                    b.Property<int?>("CliCreditRewardsPts")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("CLI_CREDIT_REWARDS_PTS");

                    b.Property<DateTime?>("CliCtrChargedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_CTR_CHARGED_DATE");

                    b.Property<DateTime?>("CliDedupeDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_DEDUPE_DATE");

                    b.Property<string>("CliDedupeFromId")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("CLI_DEDUPE_FROM_ID");

                    b.Property<decimal?>("CliDedupeToId")
                        .HasColumnType("NUMBER(30)")
                        .HasColumnName("CLI_DEDUPE_TO_ID");

                    b.Property<string>("CliDndEmail")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_DND_EMAIL");

                    b.Property<string>("CliDndSms")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_DND_SMS");

                    b.Property<DateTime?>("CliDob")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_DOB");

                    b.Property<DateTime?>("CliDocsDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_DOCS_DATE");

                    b.Property<string>("CliDocsFlagRrn")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(14)")
                        .HasColumnName("CLI_DOCS_FLAG_RRN");

                    b.Property<string>("CliDocsPendingFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_DOCS_PENDING_FLAG");

                    b.Property<string>("CliEcsAccountNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CLI_ECS_ACCOUNT_NO");

                    b.Property<long?>("CliEcsAuthBlocked")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_ECS_AUTH_BLOCKED");

                    b.Property<long?>("CliEcsAvailableLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_ECS_AVAILABLE_LIMIT");

                    b.Property<string>("CliEcsBankBranchName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_ECS_BANK_BRANCH_NAME");

                    b.Property<string>("CliEcsBankName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_ECS_BANK_NAME");

                    b.Property<DateTime?>("CliEcsExpiryDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_ECS_EXPIRY_DATE");

                    b.Property<string>("CliEcsIfscCode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_ECS_IFSC_CODE");

                    b.Property<long?>("CliEcsLimit")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_ECS_LIMIT");

                    b.Property<long?>("CliEcsLoanBlocked")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_ECS_LOAN_BLOCKED");

                    b.Property<string>("CliEcsMicrCode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_ECS_MICR_CODE");

                    b.Property<string>("CliEcsRegNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_ECS_REG_NO");

                    b.Property<DateTime?>("CliEcsUpdateDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_ECS_UPDATE_DATE");

                    b.Property<string>("CliEcsUpdateMode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("CLI_ECS_UPDATE_MODE");

                    b.Property<DateTime?>("CliEndDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_END_DATE");

                    b.Property<string>("CliFirstName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_FIRST_NAME");

                    b.Property<string>("CliFraudProneFlag")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("CLI_FRAUD_PRONE_FLAG");

                    b.Property<string>("CliGender")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("CLI_GENDER");

                    b.Property<string>("CliImpsFirstHolderName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CLI_IMPS_FIRST_HOLDER_NAME");

                    b.Property<string>("CliImpsSecondHolderName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CLI_IMPS_SECOND_HOLDER_NAME");

                    b.Property<string>("CliInstaRrn")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(14)")
                        .HasColumnName("CLI_INSTA_RRN");

                    b.Property<DateTime?>("CliIvrUpd")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_IVR_UPD");

                    b.Property<DateTime?>("CliLastAuthDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_LAST_AUTH_DATE");

                    b.Property<DateTime?>("CliLastLoanDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_LAST_LOAN_DATE");

                    b.Property<DateTime?>("CliLastModifyDtBfl")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_LAST_MODIFY_DT_BFL");

                    b.Property<DateTime?>("CliLastModifyDtWl")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_LAST_MODIFY_DT_WL");

                    b.Property<string>("CliLastName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_LAST_NAME");

                    b.Property<string>("CliMailingAddr")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_MAILING_ADDR");

                    b.Property<string>("CliManualBlockCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(6)")
                        .HasColumnName("CLI_MANUAL_BLOCK_CODE")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("CliManualBlockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_MANUAL_BLOCK_DATE");

                    b.Property<DateTime?>("CliManualUnblockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_MANUAL_UNBLOCK_DATE");

                    b.Property<string>("CliManualUnblockReason")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("CLI_MANUAL_UNBLOCK_REASON");

                    b.Property<string>("CliMiddleName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_MIDDLE_NAME");

                    b.Property<string>("CliMoratPaymentFlag")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_MORAT_PAYMENT_FLAG");

                    b.Property<short?>("CliNoOfActiveLoans")
                        .HasPrecision(5)
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("CLI_NO_OF_ACTIVE_LOANS");

                    b.Property<decimal?>("CliNoOfLinkedCust")
                        .HasColumnType("NUMBER")
                        .HasColumnName("CLI_NO_OF_LINKED_CUST");

                    b.Property<string>("CliOfcAddr1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_OFC_ADDR1");

                    b.Property<string>("CliOfcAddr2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_OFC_ADDR2");

                    b.Property<string>("CliOfcAddr3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_OFC_ADDR3");

                    b.Property<DateTime?>("CliOfcAddrDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_OFC_ADDR_DATE");

                    b.Property<string>("CliOfcArea")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_OFC_AREA");

                    b.Property<int?>("CliOfcCityId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CLI_OFC_CITY_ID");

                    b.Property<string>("CliOfcEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_OFC_EMAIL");

                    b.Property<DateTime?>("CliOfcEmailDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_OFC_EMAIL_DATE");

                    b.Property<string>("CliOfcLandmark")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_OFC_LANDMARK");

                    b.Property<string>("CliOfcMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_OFC_MOBILE");

                    b.Property<DateTime?>("CliOfcMobileChgDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_OFC_MOBILE_CHG_DATE");

                    b.Property<string>("CliOfcPhone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_OFC_PHONE");

                    b.Property<int?>("CliOfcPincode")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CLI_OFC_PINCODE");

                    b.Property<int?>("CliOfcStateId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CLI_OFC_STATE_ID");

                    b.Property<string>("CliOfcStd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_OFC_STD");

                    b.Property<string>("CliOldOfcMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_OLD_OFC_MOBILE");

                    b.Property<string>("CliOldResMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_OLD_RES_MOBILE");

                    b.Property<string>("CliPanNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_PAN_NO");

                    b.Property<string>("CliPanStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_PAN_STATUS");

                    b.Property<string>("CliReKycFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("CLI_RE_KYC_FLAG");

                    b.Property<string>("CliResAddr1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_RES_ADDR1");

                    b.Property<string>("CliResAddr2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_RES_ADDR2");

                    b.Property<string>("CliResAddr3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_RES_ADDR3");

                    b.Property<DateTime?>("CliResAddrChgDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_RES_ADDR_CHG_DATE");

                    b.Property<string>("CliResArea")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_RES_AREA");

                    b.Property<int?>("CliResCityId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CLI_RES_CITY_ID");

                    b.Property<string>("CliResEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_RES_EMAIL");

                    b.Property<DateTime?>("CliResEmailDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_RES_EMAIL_DATE");

                    b.Property<string>("CliResLandmark")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_RES_LANDMARK");

                    b.Property<string>("CliResMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_RES_MOBILE");

                    b.Property<DateTime?>("CliResMobileChgDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_RES_MOBILE_CHG_DATE");

                    b.Property<string>("CliResPhone")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("CLI_RES_PHONE");

                    b.Property<int?>("CliResPincode")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CLI_RES_PINCODE");

                    b.Property<int?>("CliResStateId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CLI_RES_STATE_ID");

                    b.Property<string>("CliResStd")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_RES_STD");

                    b.Property<string>("CliSdkSegment")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("CLI_SDK_SEGMENT");

                    b.Property<DateTime?>("CliSdkSegmentDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_SDK_SEGMENT_DATE");

                    b.Property<string>("CliSmtFlag")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("CLI_SMT_FLAG");

                    b.Property<DateTime?>("CliStartDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_START_DATE");

                    b.Property<string>("CliStatus")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("CLI_STATUS");

                    b.Property<string>("CliSystemBlockCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("CLI_SYSTEM_BLOCK_CODE");

                    b.Property<DateTime?>("CliSystemBlockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_SYSTEM_BLOCK_DATE");

                    b.Property<DateTime?>("CliSystemUnblockDate")
                        .HasColumnType("DATE")
                        .HasColumnName("CLI_SYSTEM_UNBLOCK_DATE");

                    b.Property<string>("CliSystemUnblockReason")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("CLI_SYSTEM_UNBLOCK_REASON");

                    b.Property<string>("CliTitle")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("CLI_TITLE");

                    b.Property<long?>("CliTotalAuthBlocked")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_TOTAL_AUTH_BLOCKED");

                    b.Property<long?>("CliTotalLoanBlocked")
                        .HasPrecision(12)
                        .HasColumnType("NUMBER(12)")
                        .HasColumnName("CLI_TOTAL_LOAN_BLOCKED");

                    b.Property<string>("CliTxnScore")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CLI_TXN_SCORE");

                    b.Property<string>("CliType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CLI_TYPE");

                    b.Property<string>("CliUid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CLI_UID");

                    b.Property<string>("CliVehicleRegistration")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CLI_VEHICLE_REGISTRATION");

                    b.Property<bool?>("CliVehicleType")
                        .HasPrecision(1)
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("CLI_VEHICLE_TYPE");

                    b.HasKey("CliCustId")
                        .HasName("PK_INACTCLI_CUST_ID");

                    b.HasIndex(new[] { "CliResMobile" }, "IDX_INACTCUSTRESIMOBILE");

                    b.ToTable("FINS_INACTCLIENTMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsLrpdebug", b =>
                {
                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Line")
                        .HasColumnType("CLOB")
                        .HasColumnName("LINE");

                    b.ToTable("FINS_LRPDEBUG");
                });

            modelBuilder.Entity("projectMigration.Models.FinsManufacturermaster", b =>
                {
                    b.Property<decimal>("ManufactureId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MANUFACTURE_ID");

                    b.Property<string>("ManufactureDesc")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("MANUFACTURE_DESC");

                    b.Property<decimal?>("Addedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON")
                        .HasDefaultValueSql("SYSDATE");

                    b.Property<string>("Bankcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("BANKCODE");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("IPADDRESS");

                    b.Property<decimal>("Mmid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MMID");

                    b.Property<decimal?>("Modifiedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<DateTime?>("Modifiedon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON")
                        .HasDefaultValueSql("SYSDATE");

                    b.Property<string>("UploadId")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("UPLOAD_ID");

                    b.HasKey("ManufactureId", "ManufactureDesc")
                        .HasName("SYS_C0011349");

                    b.ToTable("FINS_MANUFACTURERMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsModelmaster", b =>
                {
                    b.Property<decimal>("Modelid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODELID");

                    b.Property<DateTime?>("AddedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDED_DATE");

                    b.Property<int?>("Categoryid")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("CATEGORYID");

                    b.Property<string>("Make")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("MAKE");

                    b.Property<int?>("Manufacturerid")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("MANUFACTURERID");

                    b.Property<DateTime?>("ModelExpiryDate")
                        .HasColumnType("DATE")
                        .HasColumnName("MODEL_EXPIRY_DATE");

                    b.Property<decimal?>("ModelMinPrice")
                        .HasColumnType("NUMBER(18,4)")
                        .HasColumnName("MODEL_MIN_PRICE");

                    b.Property<decimal?>("ModelSeq")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODEL_SEQ");

                    b.Property<string>("Modelno")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("MODELNO");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("PRODUCT_CODE");

                    b.Property<decimal?>("SellingPrice")
                        .HasColumnType("NUMBER(18,4)")
                        .HasColumnName("SELLING_PRICE");

                    b.Property<string>("SerialNoValidFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("SERIAL_NO_VALID_FLAG");

                    b.Property<string>("SfdcModelCode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("SFDC_MODEL_CODE");

                    b.Property<string>("SfdcModelId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("SFDC_MODEL_ID");

                    b.Property<int?>("SizeId")
                        .HasPrecision(8)
                        .HasColumnType("NUMBER(8)")
                        .HasColumnName("SIZE_ID");

                    b.Property<string>("Uploadid")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("UPLOADID");

                    b.HasKey("Modelid")
                        .HasName("FINS_MDLMMASTER_PK");

                    b.HasIndex(new[] { "Manufacturerid" }, "IDX_MANUFACTURERIDMM");

                    b.ToTable("FINS_MODELMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsModelproductmapping", b =>
                {
                    b.Property<decimal?>("Addedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("IPADDRESS");

                    b.Property<decimal?>("Modefiedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODEFIEDBY");

                    b.Property<DateTime?>("Modefiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODEFIEDON");

                    b.Property<decimal>("Modelid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODELID");

                    b.Property<decimal?>("Modelprodseq")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODELPRODSEQ");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PRODUCT");

                    b.Property<string>("Uploadid")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("UPLOADID");

                    b.HasIndex(new[] { "Modelid", "Product" }, "IDX1_FINS_MODELPRODUCTMAPPING");

                    b.HasIndex(new[] { "Product" }, "IDX_PRODUCTMAST");

                    b.ToTable("FINS_MODELPRODUCTMAPPING");
                });

            modelBuilder.Entity("projectMigration.Models.FinsProductlevelparammaster", b =>
                {
                    b.Property<string>("Accounttypeid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("ACCOUNTTYPEID");

                    b.Property<string>("Addedby")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDON");

                    b.Property<string>("BaseDueDateCheck")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("BASE_DUE_DATE_CHECK");

                    b.Property<string>("Ctrallowed")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("CTRALLOWED");

                    b.Property<string>("Dueday")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("DUEDAY");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("IPADDRESS");

                    b.Property<string>("Modifyby")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("MODIFYBY");

                    b.Property<DateTime?>("Modifyon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFYON");

                    b.Property<string>("Product")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PRODUCT");

                    b.Property<decimal?>("ProductLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("PRODUCT_LEVEL_ID")
                        .HasDefaultValueSql("\"EFCOREPOC\".\"PRODUCTPARAMATERID\".\"NEXTVAL\"");

                    b.Property<string>("Refundday")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("REFUNDDAY");

                    b.Property<string>("Ruralproduct")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("RURALPRODUCT");

                    b.Property<string>("Settelment")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("SETTELMENT");

                    b.Property<string>("Status")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("STATUS");

                    b.ToTable("FINS_PRODUCTLEVELPARAMMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsProfilekeyconfig", b =>
                {
                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Bankcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("BANKCODE");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("IPADDRESS");

                    b.Property<decimal?>("Keyid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("KEYID");

                    b.Property<decimal?>("Keylength")
                        .HasColumnType("NUMBER")
                        .HasColumnName("KEYLENGTH");

                    b.Property<DateTime?>("Modifiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON");

                    b.Property<string>("Modulecode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("MODULECODE");

                    b.Property<string>("ProfileId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("PROFILE_ID");

                    b.Property<string>("Profilekey")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(300)")
                        .HasColumnName("PROFILEKEY");

                    b.Property<string>("Thirdparty")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("THIRDPARTY");

                    b.ToTable("FINS_PROFILEKEYCONFIG");
                });

            modelBuilder.Entity("projectMigration.Models.FinsProfilemaster", b =>
                {
                    b.Property<string>("AccBestLimit")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACC_BEST_LIMIT");

                    b.Property<string>("AccBlockClassModifyDt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACC_BLOCK_CLASS_MODIFY_DT");

                    b.Property<string>("AccBlockClassification")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACC_BLOCK_CLASSIFICATION");

                    b.Property<string>("AccEndDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACC_END_DATE");

                    b.Property<string>("AccLastModifyDtBfl")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACC_LAST_MODIFY_DT_BFL");

                    b.Property<string>("AccLastModifyDtWl")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACC_LAST_MODIFY_DT_WL");

                    b.Property<string>("AccNoOfAddonCards")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACC_NO_OF_ADDON_CARDS");

                    b.Property<string>("AccStartDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACC_START_DATE");

                    b.Property<string>("AccTotalNoOfCards")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACC_TOTAL_NO_OF_CARDS");

                    b.Property<string>("AccountAdjLimit")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_ADJ_LIMIT");

                    b.Property<string>("AccountAdjLimitAdjDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_ADJ_LIMIT_ADJ_DATE");

                    b.Property<string>("AccountCreationDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_CREATION_DATE");

                    b.Property<string>("AccountCreditLimit")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_CREDIT_LIMIT");

                    b.Property<string>("AccountId")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_ID");

                    b.Property<string>("AccountLastAuthDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_LAST_AUTH_DATE");

                    b.Property<string>("AccountManualBlockCode")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_MANUAL_BLOCK_CODE");

                    b.Property<string>("AccountManualBlockDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_MANUAL_BLOCK_DATE");

                    b.Property<string>("AccountManualUnblockDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_MANUAL_UNBLOCK_DATE");

                    b.Property<string>("AccountManualUnblockReason")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_MANUAL_UNBLOCK_REASON");

                    b.Property<string>("AccountSystemBlockCode")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_SYSTEM_BLOCK_CODE");

                    b.Property<string>("AccountSystemBlockDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_SYSTEM_BLOCK_DATE");

                    b.Property<string>("AccountSystemUnblockDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_SYSTEM_UNBLOCK_DATE");

                    b.Property<string>("AccountSystemUnblockReason")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_SYSTEM_UNBLOCK_REASON");

                    b.Property<string>("AccountTempLimit")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_TEMP_LIMIT");

                    b.Property<string>("AccountTempLimitEndDt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_TEMP_LIMIT_END_DT");

                    b.Property<string>("AccountTempLimitStartDt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_TEMP_LIMIT_START_DT");

                    b.Property<string>("AccountTotalAuthBlocked")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_TOTAL_AUTH_BLOCKED");

                    b.Property<string>("AccountTotalLoanBlocked")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_TOTAL_LOAN_BLOCKED");

                    b.Property<string>("AccountType")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_TYPE");

                    b.Property<string>("AccountVipNonvipFlag")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ACCOUNT_VIP_NONVIP_FLAG");

                    b.Property<string>("ActivityMode")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("ACTIVITY_MODE");

                    b.Property<string>("AnnualFeeDueDt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ANNUAL_FEE_DUE_DT");

                    b.Property<string>("Authcode")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTHCODE");

                    b.Property<string>("BaseLoanFdd")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BASE_LOAN_FDD");

                    b.Property<string>("BaseLoanNumber")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BASE_LOAN_NUMBER");

                    b.Property<string>("BlockClassModifyDt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BLOCK_CLASS_MODIFY_DT");

                    b.Property<string>("BlockClassification")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BLOCK_CLASSIFICATION");

                    b.Property<string>("Bscore")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("BSCORE");

                    b.Property<string>("CardAccountId")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_ACCOUNT_ID");

                    b.Property<string>("CardActivationDt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_ACTIVATION_DT");

                    b.Property<string>("CardCardCreaDt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_CARD_CREA_DT");

                    b.Property<string>("CardCardNo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_CARD_NO");

                    b.Property<string>("CardCardType")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_CARD_TYPE");

                    b.Property<string>("CardCustId")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_CUST_ID");

                    b.Property<string>("CardDealerCd")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_DEALER_CD");

                    b.Property<string>("CardDesign")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_DESIGN");

                    b.Property<string>("CardEmiCardCharges")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_EMI_CARD_CHARGES");

                    b.Property<string>("CardExpDt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_EXP_DT");

                    b.Property<string>("CardGrpDealerCd")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_GRP_DEALER_CD");

                    b.Property<string>("CardGrpDealerName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_GRP_DEALER_NAME");

                    b.Property<string>("CardLastAuthDt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_LAST_AUTH_DT");

                    b.Property<string>("CardLastModifyDt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_LAST_MODIFY_DT");

                    b.Property<string>("CardLatestCardStatus")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_LATEST_CARD_STATUS");

                    b.Property<string>("CardNameOnCard")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_NAME_ON_CARD");

                    b.Property<string>("CardPin")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_PIN");

                    b.Property<string>("CardPrimaryAddOnInd")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_PRIMARY_ADD_ON_IND");

                    b.Property<string>("CardReissueDt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_REISSUE_DT");

                    b.Property<string>("CardReplNewCard")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_REPL_NEW_CARD");

                    b.Property<string>("CardReplOldCard")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_REPL_OLD_CARD");

                    b.Property<string>("CardSourceInd")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_SOURCE_IND");

                    b.Property<string>("CardSrcType")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_SRC_TYPE");

                    b.Property<string>("CardSystemBlockCode")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_SYSTEM_BLOCK_CODE");

                    b.Property<string>("CardSystemBlockDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_SYSTEM_BLOCK_DATE");

                    b.Property<string>("CardSystemUnblockReason")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_SYSTEM_UNBLOCK_REASON");

                    b.Property<string>("CardTypeIdentifier")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_TYPE_IDENTIFIER");

                    b.Property<string>("CardUserName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_USER_NAME");

                    b.Property<string>("CardWecareRefNo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_WECARE_REF_NO");

                    b.Property<string>("CardWrngPinAttmpt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CARD_WRNG_PIN_ATTMPT");

                    b.Property<string>("CibilScoreSource")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CIBIL_SCORE_SOURCE");

                    b.Property<string>("CliDocsFlagRrn")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_DOCS_FLAG_RRN");

                    b.Property<string>("CliEcsUpdateMode")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_ECS_UPDATE_MODE");

                    b.Property<string>("CliEndDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_END_DATE");

                    b.Property<string>("CliFraudProneFlag")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_FRAUD_PRONE_FLAG");

                    b.Property<string>("CliInstaRrn")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_INSTA_RRN");

                    b.Property<string>("CliLastModifyDtBfl")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_LAST_MODIFY_DT_BFL");

                    b.Property<string>("CliLastModifyDtWl")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_LAST_MODIFY_DT_WL");

                    b.Property<string>("CliMoratPaymentFlag")
                        .HasMaxLength(22)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(22)")
                        .HasColumnName("CLI_MORAT_PAYMENT_FLAG");

                    b.Property<string>("CliSdkSegment")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CLI_SDK_SEGMENT");

                    b.Property<string>("CliSmtFlag")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_SMT_FLAG");

                    b.Property<string>("CliStartDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CLI_START_DATE");

                    b.Property<string>("CrdChargedRrn")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CRD_CHARGED_RRN");

                    b.Property<string>("CrdFundedNonfunded")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CRD_FUNDED_NONFUNDED");

                    b.Property<string>("CrdLastModifyDtBfl")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CRD_LAST_MODIFY_DT_BFL");

                    b.Property<string>("CrdLastModifyDtWl")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CRD_LAST_MODIFY_DT_WL");

                    b.Property<string>("CrdManualBlockCode")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CRD_MANUAL_BLOCK_CODE");

                    b.Property<string>("CrdManualBlockDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CRD_MANUAL_BLOCK_DATE");

                    b.Property<string>("CrdManualUnblockDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CRD_MANUAL_UNBLOCK_DATE");

                    b.Property<string>("CrdManualUnblockReason")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CRD_MANUAL_UNBLOCK_REASON");

                    b.Property<string>("CrdSystemUnblockDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CRD_SYSTEM_UNBLOCK_DATE");

                    b.Property<string>("CrdWrngOtpAttmpt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CRD_WRNG_OTP_ATTMPT");

                    b.Property<string>("CredcrdOfrBflccid")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CREDCRD_OFR_BFLCCID");

                    b.Property<string>("CredcrdOfrLim")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CREDCRD_OFR_LIM");

                    b.Property<string>("CredcrdOfrType")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CREDCRD_OFR_TYPE");

                    b.Property<string>("CredcrdOtbl")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CREDCRD_OTBL");

                    b.Property<string>("CredcrdPancopyExist")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CREDCRD_PANCOPY_EXIST");

                    b.Property<string>("CreditRewardsPts")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CREDIT_REWARDS_PTS");

                    b.Property<string>("CustomerBranchId")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_BRANCH_ID");

                    b.Property<string>("CustomerCibilScore")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_CIBIL_SCORE");

                    b.Property<string>("CustomerCibilScoreDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_CIBIL_SCORE_DATE");

                    b.Property<string>("CustomerCreationDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_CREATION_DATE");

                    b.Property<string>("CustomerCreditLimit")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_CREDIT_LIMIT");

                    b.Property<string>("CustomerCtrChargedDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_CTR_CHARGED_DATE");

                    b.Property<string>("CustomerDndEmail")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_DND_EMAIL");

                    b.Property<string>("CustomerDndSms")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_DND_SMS");

                    b.Property<string>("CustomerDocsDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_DOCS_DATE");

                    b.Property<string>("CustomerDocsPendingFlag")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_DOCS_PENDING_FLAG");

                    b.Property<string>("CustomerEcsAccountNo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_ECS_ACCOUNT_NO");

                    b.Property<string>("CustomerEcsAuthBlocked")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_ECS_AUTH_BLOCKED");

                    b.Property<string>("CustomerEcsAvailableLimit")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_ECS_AVAILABLE_LIMIT");

                    b.Property<string>("CustomerEcsBankBranchName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_ECS_BANK_BRANCH_NAME");

                    b.Property<string>("CustomerEcsBankName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_ECS_BANK_NAME");

                    b.Property<string>("CustomerEcsExpiryDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_ECS_EXPIRY_DATE");

                    b.Property<string>("CustomerEcsIfscCode")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_ECS_IFSC_CODE");

                    b.Property<string>("CustomerEcsLimit")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_ECS_LIMIT");

                    b.Property<string>("CustomerEcsLoanBlocked")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_ECS_LOAN_BLOCKED");

                    b.Property<string>("CustomerEcsMicrCode")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_ECS_MICR_CODE");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_ID");

                    b.Property<string>("CustomerManualBlockCode")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_MANUAL_BLOCK_CODE");

                    b.Property<string>("CustomerManualBlockDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_MANUAL_BLOCK_DATE");

                    b.Property<string>("CustomerManualUnblockDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_MANUAL_UNBLOCK_DATE");

                    b.Property<string>("CustomerManualUnblockReason")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_MANUAL_UNBLOCK_REASON");

                    b.Property<string>("CustomerStatus")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_STATUS");

                    b.Property<string>("CustomerSystemBlockCode")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_SYSTEM_BLOCK_CODE");

                    b.Property<string>("CustomerSystemBlockDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_SYSTEM_BLOCK_DATE");

                    b.Property<string>("CustomerSystemBlockReason")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_SYSTEM_BLOCK_REASON");

                    b.Property<string>("CustomerSystemUnblockDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_SYSTEM_UNBLOCK_DATE");

                    b.Property<string>("CustomerTotalAuthBlocked")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_TOTAL_AUTH_BLOCKED");

                    b.Property<string>("CustomerTotalLoanBlocked")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_TOTAL_LOAN_BLOCKED");

                    b.Property<string>("CustomerType")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_TYPE");

                    b.Property<string>("CustomerVehicleRegistration")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_VEHICLE_REGISTRATION");

                    b.Property<string>("CustomerVehicleType")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("CUSTOMER_VEHICLE_TYPE");

                    b.Property<decimal?>("Dealerid")
                        .HasColumnType("NUMBER(20)")
                        .HasColumnName("DEALERID");

                    b.Property<string>("DedupeDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("DEDUPE_DATE");

                    b.Property<string>("DedupeFromCustomerId")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("DEDUPE_FROM_CUSTOMER_ID");

                    b.Property<string>("DedupeToCustomerId")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("DEDUPE_TO_CUSTOMER_ID");

                    b.Property<string>("DigitalColour")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("DIGITAL_COLOUR");

                    b.Property<string>("Dob")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("DOB");

                    b.Property<string>("EcsRegNo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ECS_REG_NO");

                    b.Property<string>("EcsUpdateDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("ECS_UPDATE_DATE");

                    b.Property<string>("FirstName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("FIRST_NAME");

                    b.Property<string>("Gender")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("GENDER");

                    b.Property<string>("LaddonDob")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LADDON_DOB");

                    b.Property<string>("LaddonDocsFlag")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LADDON_DOCS_FLAG");

                    b.Property<string>("LaddonLastModifyDt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LADDON_LAST_MODIFY_DT");

                    b.Property<string>("LaddonMobChangeDt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LADDON_MOB_CHANGE_DT");

                    b.Property<string>("LaddonMobile")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LADDON_MOBILE");

                    b.Property<string>("LaddonOldMobilNo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LADDON_OLD_MOBIL_NO");

                    b.Property<string>("LaddonRelationshipPrim")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LADDON_RELATIONSHIP_PRIM");

                    b.Property<string>("LaddonResidenceEmail")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LADDON_RESIDENCE_EMAIL");

                    b.Property<string>("LastAuthDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LAST_AUTH_DATE");

                    b.Property<string>("LastLoanDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LAST_LOAN_DATE");

                    b.Property<string>("LastName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LAST_NAME");

                    b.Property<string>("LbcliOldResidenceMobile")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LBCLI_OLD_RESIDENCE_MOBILE");

                    b.Property<string>("LbcliOldestActPriCard")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LBCLI_OLDEST_ACT_PRI_CARD");

                    b.Property<string>("LbcliResidenceEmailDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("LBCLI_RESIDENCE_EMAIL_DATE");

                    b.Property<string>("MailingAddress")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("MAILING_ADDRESS");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("MIDDLE_NAME");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIED_DATE");

                    b.Property<string>("NameOfChmpChllg")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("NAME_OF_CHMP_CHLLG");

                    b.Property<string>("NoOfLinkedCust")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("NO_OF_LINKED_CUST");

                    b.Property<string>("NonDigitalColour")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("NON_DIGITAL_COLOUR");

                    b.Property<string>("OldOfcMobile")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("OLD_OFC_MOBILE");

                    b.Property<string>("PanNo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("PAN_NO");

                    b.Property<string>("ProcessDeviationEndDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("PROCESS_DEVIATION_END_DATE");

                    b.Property<string>("ProcessDeviationFlag")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("PROCESS_DEVIATION_FLAG");

                    b.Property<int>("ProfileId")
                        .HasPrecision(10)
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PROFILE_ID");

                    b.Property<string>("ProfileIdIdentifier")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("PROFILE_ID_IDENTIFIER");

                    b.Property<string>("ProfileOwner")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("PROFILE_OWNER");

                    b.Property<string>("Profilestatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("PROFILESTATUS");

                    b.Property<string>("ResidenceAddress1")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_ADDRESS1");

                    b.Property<string>("ResidenceAddress2")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_ADDRESS2");

                    b.Property<string>("ResidenceAddress3")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_ADDRESS3");

                    b.Property<string>("ResidenceAddressChangeDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_ADDRESS_CHANGE_DATE");

                    b.Property<string>("ResidenceArea")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_AREA");

                    b.Property<string>("ResidenceCityId")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_CITY_ID");

                    b.Property<string>("ResidenceEmail")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_EMAIL");

                    b.Property<string>("ResidenceLandmark")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_LANDMARK");

                    b.Property<string>("ResidenceMobile")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_MOBILE");

                    b.Property<string>("ResidenceMobileChangeDate")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_MOBILE_CHANGE_DATE");

                    b.Property<string>("ResidencePhone")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_PHONE");

                    b.Property<string>("ResidencePincode")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_PINCODE");

                    b.Property<string>("ResidenceStateId")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_STATE_ID");

                    b.Property<string>("ResidenceStd")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("RESIDENCE_STD");

                    b.Property<string>("SystemUnblockReason")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("SYSTEM_UNBLOCK_REASON");

                    b.Property<string>("Title")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("TITLE");

                    b.Property<string>("TxnScore")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("TXN_SCORE");

                    b.Property<string>("Txntype")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("TXNTYPE");

                    b.Property<string>("UidNo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("UID_NO");

                    b.Property<string>("UnblockBlockCode")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("UNBLOCK_BLOCK_CODE");

                    b.Property<string>("Useremail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("USEREMAIL");

                    b.Property<string>("Userid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("USERID");

                    b.ToTable("FINS_PROFILEMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsRuralschememaster", b =>
                {
                    b.Property<string>("Activestatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("ACTIVESTATUS");

                    b.Property<string>("Createdby")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("CREATEDBY");

                    b.Property<DateTime?>("Createddate")
                        .HasColumnType("DATE")
                        .HasColumnName("CREATEDDATE");

                    b.Property<string>("Createdid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATEDID");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("IPADDRESS");

                    b.Property<string>("Modifiedby")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDDATE");

                    b.Property<string>("Modifiedid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("MODIFIEDID");

                    b.Property<string>("Nschemeproduct")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4)")
                        .HasColumnName("NSCHEMEPRODUCT");

                    b.Property<string>("Rschemeproduct")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4)")
                        .HasColumnName("RSCHEMEPRODUCT");

                    b.Property<string>("Ruralschemeid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("RURALSCHEMEID");

                    b.Property<string>("Schemeid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("SCHEMEID");

                    b.Property<decimal?>("Seqid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SEQID");

                    b.HasIndex(new[] { "Schemeid" }, "IDX_RURALSCHEMEMASTER");

                    b.HasIndex(new[] { "Ruralschemeid" }, "IDX_RURALSCHEMEMASTERRSID");

                    b.ToTable("FINS_RURALSCHEMEMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsSchemedealermapping", b =>
                {
                    b.Property<decimal?>("Addedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<decimal?>("Bankpk")
                        .HasColumnType("NUMBER")
                        .HasColumnName("BANKPK");

                    b.Property<decimal?>("DlrSchid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DLR_SCHID");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("IPADDRESS");

                    b.Property<decimal?>("Modifiedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<DateTime?>("Modifiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON");

                    b.Property<DateTime?>("Processeddate")
                        .HasColumnType("DATE")
                        .HasColumnName("PROCESSEDDATE");

                    b.Property<decimal?>("SchemeId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SCHEME_ID");

                    b.Property<decimal?>("Supplierid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SUPPLIERID");

                    b.Property<string>("Uploadid")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("UPLOADID");

                    b.HasIndex(new[] { "Supplierid" }, "IDX1_FINS_SCHEMEDEALERMAPPING");

                    b.ToTable("FINS_SCHEMEDEALERMAPPING");
                });

            modelBuilder.Entity("projectMigration.Models.FinsSchememappingremi", b =>
                {
                    b.Property<string>("Mappedproduct")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("MAPPEDPRODUCT");

                    b.Property<string>("Mappedschemeid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("MAPPEDSCHEMEID");

                    b.Property<string>("Modifiedby")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<DateTime?>("Modifieddate")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDDATE");

                    b.Property<string>("Parentschemeid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("PARENTSCHEMEID");

                    b.Property<decimal?>("Schid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SCHID");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("STATUS");

                    b.ToTable("FINS_SCHEMEMAPPINGREMI");
                });

            modelBuilder.Entity("projectMigration.Models.FinsSchememaster", b =>
                {
                    b.Property<decimal>("Schemeid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SCHEMEID");

                    b.Property<decimal?>("Addedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON")
                        .HasDefaultValueSql("SYSDATE");

                    b.Property<decimal?>("AdvanceEmi")
                        .HasColumnType("NUMBER(17,2)")
                        .HasColumnName("ADVANCE_EMI");

                    b.Property<string>("Bankcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("BANKCODE");

                    b.Property<string>("Dbd")
                        .HasMaxLength(43)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(43)")
                        .HasColumnName("DBD");

                    b.Property<string>("DealerMapping")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("DEALER_MAPPING");

                    b.Property<string>("GenSch")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("GEN_SCH");

                    b.Property<decimal?>("Intrate")
                        .HasColumnType("NUMBER(5,2)")
                        .HasColumnName("INTRATE");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("IPADDRESS");

                    b.Property<decimal?>("MaxEmiAmountPer")
                        .HasColumnType("NUMBER(7,2)")
                        .HasColumnName("MAX_EMI_AMOUNT_PER");

                    b.Property<long?>("Maxamount")
                        .HasPrecision(18)
                        .HasColumnType("NUMBER(18)")
                        .HasColumnName("MAXAMOUNT");

                    b.Property<string>("Mbd")
                        .HasMaxLength(43)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(43)")
                        .HasColumnName("MBD");

                    b.Property<long?>("Minamount")
                        .HasPrecision(18)
                        .HasColumnType("NUMBER(18)")
                        .HasColumnName("MINAMOUNT");

                    b.Property<string>("ModelMapping")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("MODEL_MAPPING");

                    b.Property<decimal?>("Modifiedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<DateTime?>("Modifiedon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON")
                        .HasDefaultValueSql("SYSDATE");

                    b.Property<string>("PortalDescription")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("PORTAL_DESCRIPTION");

                    b.Property<string>("ProcessingFees")
                        .HasMaxLength(43)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(43)")
                        .HasColumnName("PROCESSING_FEES");

                    b.Property<string>("Product")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PRODUCT");

                    b.Property<DateTime?>("SchemeExpiryDate")
                        .HasColumnType("DATE")
                        .HasColumnName("SCHEME_EXPIRY_DATE");

                    b.Property<DateTime?>("SchemeStartDate")
                        .HasColumnType("DATE")
                        .HasColumnName("SCHEME_START_DATE");

                    b.Property<string>("Schemedesc")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("SCHEMEDESC");

                    b.Property<decimal?>("Smid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SMID");

                    b.Property<string>("SplSch")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("SPL_SCH");

                    b.Property<short?>("Tenure")
                        .HasPrecision(5)
                        .HasColumnType("NUMBER(5)")
                        .HasColumnName("TENURE");

                    b.Property<string>("UploadId")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("UPLOAD_ID");

                    b.HasKey("Schemeid")
                        .HasName("SYS_C0011357");

                    b.HasIndex(new[] { "SchemeExpiryDate" }, "IDX_SCHEMMASTEXPDATE");

                    b.HasIndex(new[] { "Product" }, "IDX_SCHEMMASTPRODUCT");

                    b.ToTable("FINS_SCHEMEMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsSchememodelmapping", b =>
                {
                    b.Property<decimal?>("Addedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<decimal?>("Bankpk")
                        .HasColumnType("NUMBER")
                        .HasColumnName("BANKPK");

                    b.Property<string>("Categoryid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CATEGORYID");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("IPADDRESS");

                    b.Property<string>("ManufacturerId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("MANUFACTURER_ID");

                    b.Property<string>("ModelId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("MODEL_ID");

                    b.Property<decimal?>("Modifiedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<DateTime?>("Modifiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON");

                    b.Property<DateTime?>("Processeddate")
                        .HasColumnType("DATE")
                        .HasColumnName("PROCESSEDDATE");

                    b.Property<decimal?>("SchemeId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SCHEME_ID");

                    b.Property<decimal?>("SchidMdl")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SCHID_MDL");

                    b.Property<string>("Uploadid")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("UPLOADID");

                    b.HasIndex(new[] { "SchemeId" }, "IDX1_FINS_SCHEMEMODELMAPPING");

                    b.ToTable("FINS_SCHEMEMODELMAPPING");
                });

            modelBuilder.Entity("projectMigration.Models.FinsSmsalertmaster", b =>
                {
                    b.Property<string>("Servicename")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("SERVICENAME");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("AuthRestime")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_RESTIME");

                    b.Property<string>("Ccemailid")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("CCEMAILID");

                    b.Property<string>("ExtCcemail")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("EXT_CCEMAIL");

                    b.Property<string>("ExtToemail")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("EXT_TOEMAIL");

                    b.Property<string>("Fromemailid")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("FROMEMAILID");

                    b.Property<DateTime?>("Modifiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON");

                    b.Property<string>("OtpRestime")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("OTP_RESTIME");

                    b.Property<string>("SendsmsTo")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("SENDSMS_TO");

                    b.Property<string>("SmsFlag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("SMS_FLAG");

                    b.Property<string>("SmsText")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("SMS_TEXT");

                    b.Property<string>("Toemailid")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("TOEMAILID");

                    b.HasKey("Servicename")
                        .HasName("FINS_SMSALERTMASTER_PK");

                    b.ToTable("FINS_SMSALERTMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsSysLevelParamMaster", b =>
                {
                    b.Property<string>("Addedby")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDON");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("IPADDRESS");

                    b.Property<string>("Modifyby")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("MODIFYBY");

                    b.Property<DateTime?>("Modifyon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFYON");

                    b.Property<string>("Paramatervalues")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PARAMATERVALUES");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("STATUS");

                    b.Property<decimal?>("SysLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER")
                        .HasColumnName("SYS_LEVEL_ID")
                        .HasDefaultValueSql("\"EFCOREPOC\".\"SYSTEMPARAMATERID\".\"NEXTVAL\"");

                    b.Property<string>("SysLevelParameter")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("SYS_LEVEL_PARAMETER");

                    b.HasIndex(new[] { "Status" }, "IDX_PARAMSTATUS");

                    b.HasIndex(new[] { "SysLevelParameter" }, "IDX_SYSLAVELPARAM");

                    b.ToTable("FINS_SYS_LEVEL_PARAM_MASTER");
                });

            modelBuilder.Entity("projectMigration.Models.FinsTid", b =>
                {
                    b.Property<string>("AcqChnl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("ACQ_CHNL");

                    b.Property<DateTime?>("AcqchangeDate")
                        .HasColumnType("DATE")
                        .HasColumnName("ACQCHANGE_DATE");

                    b.Property<string>("Acqchncode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("ACQCHNCODE");

                    b.Property<decimal?>("Addedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDEDBY");

                    b.Property<string>("Addedon")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Bflprofileid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("BFLPROFILEID");

                    b.Property<string>("PosType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("POS_TYPE");

                    b.Property<string>("Tid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("TID");

                    b.Property<DateTime?>("Tidcreationdate")
                        .HasColumnType("DATE")
                        .HasColumnName("TIDCREATIONDATE");

                    b.Property<string>("Tidstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("TIDSTATUS");

                    b.HasIndex(new[] { "Acqchncode" }, "IDX_TIDACQCHNCODE");

                    b.HasIndex(new[] { "Tid" }, "IDX_XPBFLTID");

                    b.HasIndex(new[] { "Bflprofileid" }, "IDX_XP_BFL_TIDBFLPROFILEID");

                    b.ToTable("FINS_TID");
                });

            modelBuilder.Entity("projectMigration.Models.FinsValidateorderid", b =>
                {
                    b.Property<decimal>("Dealerid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DEALERID");

                    b.Property<string>("Orderid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ORDERID");

                    b.Property<string>("Awlchanneltype")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("AWLCHANNELTYPE");

                    b.Property<DateTime?>("Addedon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON")
                        .HasDefaultValueSql("sysdate");

                    b.HasKey("Dealerid", "Orderid", "Awlchanneltype")
                        .HasName("SYS_C0048780");

                    b.ToTable("FINS_VALIDATEORDERID");
                });

            modelBuilder.Entity("projectMigration.Models.FinsValidateorderidPo", b =>
                {
                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Awlchanneltype")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("AWLCHANNELTYPE");

                    b.Property<decimal?>("Dealerid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DEALERID");

                    b.Property<string>("Orderid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ORDERID");

                    b.Property<decimal?>("RequestAuditSeqno")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REQUEST_AUDIT_SEQNO");

                    b.Property<string>("Resdescription")
                        .HasMaxLength(2000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2000)")
                        .HasColumnName("RESDESCRIPTION");

                    b.Property<string>("Respcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("RESPCODE");

                    b.ToTable("FINS_VALIDATEORDERID_POS");
                });

            modelBuilder.Entity("projectMigration.Models.FinsValidaterequestid", b =>
                {
                    b.Property<decimal>("Dealerid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DEALERID");

                    b.Property<string>("Requestid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("REQUESTID");

                    b.Property<string>("Awlchanneltype")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("AWLCHANNELTYPE");

                    b.Property<DateTime?>("Addedon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON")
                        .HasDefaultValueSql("sysdate");

                    b.HasKey("Dealerid", "Requestid", "Awlchanneltype")
                        .HasName("SYS_C0048779");

                    b.ToTable("FINS_VALIDATEREQUESTID");
                });

            modelBuilder.Entity("projectMigration.Models.RequestAudit", b =>
                {
                    b.Property<decimal>("Reqseqno")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REQSEQNO");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("AwlChanneltype")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AWL_CHANNELTYPE");

                    b.Property<string>("AwlTxntype")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AWL_TXNTYPE");

                    b.Property<string>("Bflreqid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BFLREQID");

                    b.Property<string>("Cardnumber")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(24)")
                        .HasColumnName("CARDNUMBER");

                    b.Property<string>("Dealercode")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("DEALERCODE");

                    b.Property<string>("Dealid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("DEALID");

                    b.Property<string>("FieldvalidationStatus")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("FIELDVALIDATION_STATUS");

                    b.Property<string>("Mobilenumber")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(14)")
                        .HasColumnName("MOBILENUMBER");

                    b.Property<string>("Orderno")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("ORDERNO");

                    b.Property<string>("ReqPktValidFlg")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("REQ_PKT_VALID_FLG");

                    b.Property<string>("Reqpacket")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("REQPACKET");

                    b.Property<string>("Reqpacketclear")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("REQPACKETCLEAR");

                    b.Property<string>("Sealvalue")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("SEALVALUE");

                    b.Property<string>("Sourcetype")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("SOURCETYPE");

                    b.Property<string>("Storeid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("STOREID");

                    b.Property<string>("Txntype")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(250)")
                        .HasColumnName("TXNTYPE");

                    b.HasKey("Reqseqno")
                        .HasName("PRI_REQAUDITSEQ1");

                    b.HasIndex(new[] { "Bflreqid" }, "IDX_BFLREQID1");

                    b.HasIndex(new[] { "AwlChanneltype" }, "IDX_REQAUDITCHNLTYPE1");

                    b.HasIndex(new[] { "Dealercode" }, "IDX_REQAUDITDEALERCODE1");

                    b.HasIndex(new[] { "Orderno" }, "IDX_REQAUDITORDERNO1");

                    b.HasIndex(new[] { "AwlTxntype" }, "IDX_REQAUDITTXNTYPE1");

                    b.ToTable("REQUEST_AUDIT");
                });

            modelBuilder.Entity("projectMigration.Models.RequestAuditCustsearch", b =>
                {
                    b.Property<decimal>("Reqseqno")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REQSEQNO");

                    b.Property<DateTime?>("Addedon")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("AwlChanneltype")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AWL_CHANNELTYPE");

                    b.Property<string>("AwlReqid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AWL_REQID");

                    b.Property<string>("AwlTxntype")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AWL_TXNTYPE");

                    b.Property<string>("Bflreqid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("BFLREQID");

                    b.Property<string>("Cardnumber")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(24)")
                        .HasColumnName("CARDNUMBER");

                    b.Property<string>("Dealercode")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("DEALERCODE");

                    b.Property<string>("Dealid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("DEALID");

                    b.Property<string>("FieldvalidationStatus")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("FIELDVALIDATION_STATUS");

                    b.Property<string>("Mobilenumber")
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(14)")
                        .HasColumnName("MOBILENUMBER");

                    b.Property<string>("Orderno")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("ORDERNO");

                    b.Property<string>("ReqPktValidFlg")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("REQ_PKT_VALID_FLG");

                    b.Property<string>("Reqpacket")
                        .HasColumnType("CLOB")
                        .HasColumnName("REQPACKET");

                    b.Property<string>("Reqpacketclear")
                        .HasColumnType("CLOB")
                        .HasColumnName("REQPACKETCLEAR");

                    b.Property<string>("Sealvalue")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("SEALVALUE");

                    b.Property<string>("Sourcetype")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("SOURCETYPE");

                    b.Property<string>("Storeid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("STOREID");

                    b.Property<string>("Txntype")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(250)")
                        .HasColumnName("TXNTYPE");

                    b.HasKey("Reqseqno")
                        .HasName("CONST_REQSEQNO_CUST");

                    b.HasIndex(new[] { "Bflreqid", "AwlChanneltype" }, "IDX$$_AD610001");

                    b.HasIndex(new[] { "Addedon" }, "IDX_REQUEST_AUDIT_CUSTSEARCH_ADDEDON");

                    b.ToTable("REQUEST_AUDIT_CUSTSEARCH");
                });

            modelBuilder.Entity("projectMigration.Models.ResponseAudit", b =>
                {
                    b.Property<decimal>("Resseqno")
                        .HasColumnType("NUMBER")
                        .HasColumnName("RESSEQNO");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Dealid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("DEALID");

                    b.Property<decimal?>("Reqseqno")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REQSEQNO");

                    b.Property<string>("Resdescription")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("RESDESCRIPTION");

                    b.Property<string>("Respacket")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("RESPACKET");

                    b.Property<string>("Respacketclear")
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4000)")
                        .HasColumnName("RESPACKETCLEAR");

                    b.Property<string>("Respcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("RESPCODE");

                    b.HasKey("Resseqno")
                        .HasName("PRI_RESSEQNO1");

                    b.HasIndex(new[] { "Respcode" }, "IDX_RESAUDITRESPCODE1");

                    b.HasIndex(new[] { "Reqseqno" }, "IDX_RESAUDITTXNTYPE1");

                    b.ToTable("RESPONSE_AUDIT");
                });

            modelBuilder.Entity("projectMigration.Models.ResponseAuditCustsearch", b =>
                {
                    b.Property<decimal>("Resseqno")
                        .HasColumnType("NUMBER")
                        .HasColumnName("RESSEQNO");

                    b.Property<DateTime?>("Addedon")
                        .HasPrecision(6)
                        .HasColumnType("TIMESTAMP(6)")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Dealid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("DEALID");

                    b.Property<decimal?>("Reqseqno")
                        .HasColumnType("NUMBER")
                        .HasColumnName("REQSEQNO");

                    b.Property<string>("Resdescription")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1000)")
                        .HasColumnName("RESDESCRIPTION");

                    b.Property<string>("Respacket")
                        .HasColumnType("CLOB")
                        .HasColumnName("RESPACKET");

                    b.Property<string>("Respacketclear")
                        .HasColumnType("CLOB")
                        .HasColumnName("RESPACKETCLEAR");

                    b.Property<string>("Respcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("RESPCODE");

                    b.HasKey("Resseqno")
                        .HasName("CONST_RESPONSESEQNO_CUST");

                    b.HasIndex(new[] { "Reqseqno" }, "IDX_CUSTSEARCH_REQSEQNO");

                    b.ToTable("RESPONSE_AUDIT_CUSTSEARCH");
                });

            modelBuilder.Entity("projectMigration.Models.VwFinsAuthorizationmaster", b =>
                {
                    b.Property<string>("AuthAccCardLimit")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_ACC_CARD_LIMIT");

                    b.Property<string>("AuthAccountId")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_ACCOUNT_ID");

                    b.Property<string>("AuthAccountLimitUtil")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ACCOUNT_LIMIT_UTIL");

                    b.Property<string>("AuthAcqChannelId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_ACQ_CHANNEL_ID");

                    b.Property<string>("AuthAddOnFirstTran")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_ADD_ON_FIRST_TRAN");

                    b.Property<string>("AuthAddrChngFlg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_ADDR_CHNG_FLG");

                    b.Property<string>("AuthAddressLine1")
                        .HasMaxLength(120)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(120)")
                        .HasColumnName("AUTH_ADDRESS_LINE1");

                    b.Property<string>("AuthAddressLine2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_ADDRESS_LINE2");

                    b.Property<string>("AuthAddressLine3")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_ADDRESS_LINE3");

                    b.Property<string>("AuthAdvanceEmiAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ADVANCE_EMI_AMT");

                    b.Property<string>("AuthAssetCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_ASSET_CODE");

                    b.Property<string>("AuthAuthAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AUTH_AMT");

                    b.Property<string>("AuthAuthCode")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(32)")
                        .HasColumnName("AUTH_AUTH_CODE");

                    b.Property<string>("AuthAvailableLimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AVAILABLE_LIMIT");

                    b.Property<string>("AuthAvlAmtAfterTxn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AVL_AMT_AFTER_TXN");

                    b.Property<string>("AuthAvlAmtBeforeTxn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_AVL_AMT_BEFORE_TXN");

                    b.Property<string>("AuthBankCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_BANK_CODE");

                    b.Property<string>("AuthBatchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_BATCH_ID");

                    b.Property<string>("AuthBreStip")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_BRE_STIP");

                    b.Property<string>("AuthCardCharges")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CARD_CHARGES");

                    b.Property<string>("AuthCardDesign")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CARD_DESIGN");

                    b.Property<string>("AuthCardExp")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CARD_EXP");

                    b.Property<string>("AuthCardNum")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("AUTH_CARD_NUM");

                    b.Property<string>("AuthCardType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CARD_TYPE");

                    b.Property<string>("AuthCardtypeIdentifier")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_CARDTYPE_IDENTIFIER");

                    b.Property<string>("AuthCdParentRrn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CD_PARENT_RRN");

                    b.Property<string>("AuthChallengerEligibleFlag")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_CHALLENGER_ELIGIBLE_FLAG");

                    b.Property<string>("AuthChallengerRuleId1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHALLENGER_RULE_ID1");

                    b.Property<string>("AuthChargeId1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID1");

                    b.Property<string>("AuthChargeId1Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID1_AMT");

                    b.Property<string>("AuthChargeId2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID2");

                    b.Property<string>("AuthChargeId2Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID2_AMT");

                    b.Property<string>("AuthChargeId3")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID3");

                    b.Property<string>("AuthChargeId3Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID3_AMT");

                    b.Property<string>("AuthChargeId4")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID4");

                    b.Property<string>("AuthChargeId4Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID4_AMT");

                    b.Property<string>("AuthChargeId5")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CHARGE_ID5");

                    b.Property<string>("AuthChargeId5Amt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CHARGE_ID5_AMT");

                    b.Property<string>("AuthCibilDate")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CIBIL_DATE");

                    b.Property<string>("AuthCibilDone")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_CIBIL_DONE");

                    b.Property<string>("AuthCibilScore")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CIBIL_SCORE");

                    b.Property<string>("AuthCibilTime")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_CIBIL_TIME");

                    b.Property<string>("AuthCoBrandCardCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CO_BRAND_CARD_CODE");

                    b.Property<string>("AuthCoBrandLimitFlag")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_CO_BRAND_LIMIT_FLAG");

                    b.Property<string>("AuthCreditProgramCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_CREDIT_PROGRAM_CODE");

                    b.Property<string>("AuthCtrFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_CTR_FLAG");

                    b.Property<string>("AuthCustomerDueCycle")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("AUTH_CUSTOMER_DUE_CYCLE");

                    b.Property<string>("AuthCustomerId")
                        .HasMaxLength(19)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(19)")
                        .HasColumnName("AUTH_CUSTOMER_ID");

                    b.Property<string>("AuthCustomerName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_CUSTOMER_NAME");

                    b.Property<string>("AuthDbdSubvenPerc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DBD_SUBVEN_PERC");

                    b.Property<string>("AuthDeliveryPinCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DELIVERY_PIN_CODE");

                    b.Property<string>("AuthDfsAcquringChannel")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DFS_ACQURING_CHANNEL");

                    b.Property<string>("AuthDfsEFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_DFS_E_FLAG");

                    b.Property<string>("AuthDfsFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_DFS_FLAG");

                    b.Property<string>("AuthDfsPremiumAmount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DFS_PREMIUM_AMOUNT");

                    b.Property<string>("AuthDocumentRequiredFlg")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_DOCUMENT_REQUIRED_FLG");

                    b.Property<string>("AuthDowNumberPayment")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_DOW_NUMBER_PAYMENT");

                    b.Property<string>("AuthEcsAccountNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ECS_ACCOUNT_NUMBER");

                    b.Property<string>("AuthEcsAvailableLimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ECS_AVAILABLE_LIMIT");

                    b.Property<string>("AuthEcsBankName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_ECS_BANK_NAME");

                    b.Property<string>("AuthEcsMandateRequired")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_ECS_MANDATE_REQUIRED");

                    b.Property<string>("AuthEcslmtamt")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_ECSLMTAMT");

                    b.Property<string>("AuthEmiAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_EMI_AMT");

                    b.Property<string>("AuthExceptionMsg")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(150)")
                        .HasColumnName("AUTH_EXCEPTION_MSG");

                    b.Property<string>("AuthExtraPricingLimit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_EXTRA_PRICING_LIMIT");

                    b.Property<string>("AuthFailedRuleId")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(7)")
                        .HasColumnName("AUTH_FAILED_RULE_ID");

                    b.Property<string>("AuthField63Tag96")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_FIELD_63_TAG_96");

                    b.Property<string>("AuthFinancingTypeCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_FINANCING_TYPE_CODE");

                    b.Property<DateTime?>("AuthFirstDueDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_FIRST_DUE_DATE");

                    b.Property<string>("AuthFirstSwipeFlag")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_FIRST_SWIPE_FLAG");

                    b.Property<string>("AuthFirstTranscatioNo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_FIRST_TRANSCATIO_NO");

                    b.Property<string>("AuthFosMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_FOS_MOBILE");

                    b.Property<string>("AuthFraudFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_FRAUD_FLAG");

                    b.Property<DateTime?>("AuthFraudTxnDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_FRAUD_TXN_DATE");

                    b.Property<string>("AuthFraudTxnFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_FRAUD_TXN_FLAG");

                    b.Property<string>("AuthIdentifier")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("AUTH_IDENTIFIER");

                    b.Property<string>("AuthImei")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_IMEI");

                    b.Property<string>("AuthInterestRate")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_INTEREST_RATE");

                    b.Property<string>("AuthIpAddress")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_IP_ADDRESS");

                    b.Property<string>("AuthLastUpdDate")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("AUTH_LAST_UPD_DATE");

                    b.Property<string>("AuthLoanToValue")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_LOAN_TO_VALUE");

                    b.Property<string>("AuthManufacturerId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_MANUFACTURER_ID");

                    b.Property<string>("AuthMatchFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_MATCH_FLAG");

                    b.Property<string>("AuthMbd")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_MBD");

                    b.Property<string>("AuthMeDealerId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ME_DEALER_ID");

                    b.Property<string>("AuthMerchantBranchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_MERCHANT_BRANCH_ID");

                    b.Property<string>("AuthMerchantName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_MERCHANT_NAME");

                    b.Property<string>("AuthMicrCode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_MICR_CODE");

                    b.Property<string>("AuthMid")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_MID");

                    b.Property<string>("AuthMobile")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_MOBILE");

                    b.Property<string>("AuthMobileChangedFlag")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_MOBILE_CHANGED_FLAG");

                    b.Property<string>("AuthMobileTransaction")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_MOBILE_TRANSACTION");

                    b.Property<string>("AuthModelId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_MODEL_ID");

                    b.Property<string>("AuthModelMake")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("AUTH_MODEL_MAKE");

                    b.Property<decimal?>("AuthNoOfAddonCards")
                        .HasColumnType("NUMBER")
                        .HasColumnName("AUTH_NO_OF_ADDON_CARDS");

                    b.Property<string>("AuthNoOfAdvEmi")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_NO_OF_ADV_EMI");

                    b.Property<string>("AuthOldCibilDate")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_OLD_CIBIL_DATE");

                    b.Property<string>("AuthOldCibilScore")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_OLD_CIBIL_SCORE");

                    b.Property<string>("AuthOldCibilTime")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_OLD_CIBIL_TIME");

                    b.Property<string>("AuthOrderNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_ORDER_NO");

                    b.Property<string>("AuthOrgTxnAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_ORG_TXN_AMT");

                    b.Property<string>("AuthOriginalRrnumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(12)")
                        .HasColumnName("AUTH_ORIGINAL_RRNUMBER");

                    b.Property<string>("AuthOtpId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_OTP_ID");

                    b.Property<string>("AuthOtpRequestId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_OTP_REQUEST_ID");

                    b.Property<string>("AuthOtpVerificReslt")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_OTP_VERIFIC_RESLT");

                    b.Property<DateTime?>("AuthOtpgentime")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_OTPGENTIME");

                    b.Property<string>("AuthParentRrnumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(12)")
                        .HasColumnName("AUTH_PARENT_RRNUMBER");

                    b.Property<string>("AuthPartialCnclChrgs")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_PARTIAL_CNCL_CHRGS");

                    b.Property<string>("AuthPartialCnclFlag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_PARTIAL_CNCL_FLAG");

                    b.Property<string>("AuthPartialCnclId")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_PARTIAL_CNCL_ID");

                    b.Property<string>("AuthPartialDbdRefund")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_PARTIAL_DBD_REFUND");

                    b.Property<string>("AuthPartnerEdcChannel")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("AUTH_PARTNER_EDC_CHANNEL");

                    b.Property<string>("AuthPinumberEntered")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_PINUMBER_ENTERED");

                    b.Property<string>("AuthPosEntryMode")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(4)")
                        .HasColumnName("AUTH_POS_ENTRY_MODE");

                    b.Property<string>("AuthPosReinventAuthcode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_POS_REINVENT_AUTHCODE");

                    b.Property<string>("AuthPosReinventInvoiceAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_POS_REINVENT_INVOICE_AMT");

                    b.Property<string>("AuthPrimaryAddOnInd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_PRIMARY_ADD_ON_IND");

                    b.Property<string>("AuthProcessCode")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(6)")
                        .HasColumnName("AUTH_PROCESS_CODE");

                    b.Property<string>("AuthProcessingFee")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_PROCESSING_FEE");

                    b.Property<string>("AuthProdDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_PROD_DESC");

                    b.Property<string>("AuthProductCodeType")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_PRODUCT_CODE_TYPE");

                    b.Property<string>("AuthProductId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_PRODUCT_ID");

                    b.Property<string>("AuthPromoCode")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(30)")
                        .HasColumnName("AUTH_PROMO_CODE");

                    b.Property<string>("AuthRelationshipType")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(1)")
                        .HasColumnName("AUTH_RELATIONSHIP_TYPE");

                    b.Property<DateTime?>("AuthReqDate")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_REQ_DATE");

                    b.Property<DateTime?>("AuthReqdatetime")
                        .HasColumnType("DATE")
                        .HasColumnName("AUTH_REQDATETIME");

                    b.Property<string>("AuthRequestid")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_REQUESTID");

                    b.Property<string>("AuthResidenceCity")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("AUTH_RESIDENCE_CITY");

                    b.Property<string>("AuthResponseCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("AUTH_RESPONSE_CODE");

                    b.Property<string>("AuthResponseDesc")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(500)")
                        .HasColumnName("AUTH_RESPONSE_DESC");

                    b.Property<string>("AuthRrnumber")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(12)")
                        .HasColumnName("AUTH_RRNUMBER");

                    b.Property<string>("AuthSchemeCode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_SCHEME_CODE");

                    b.Property<string>("AuthSettledFlag")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("AUTH_SETTLED_FLAG");

                    b.Property<string>("AuthSfdcorg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("CHAR(1)")
                        .HasColumnName("AUTH_SFDCORG")
                        .IsFixedLength(true);

                    b.Property<string>("AuthSourceReverse")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_SOURCE_REVERSE");

                    b.Property<string>("AuthStoreId")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("AUTH_STORE_ID");

                    b.Property<string>("AuthTenor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_TENOR");

                    b.Property<string>("AuthTid")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_TID");

                    b.Property<string>("AuthTliUtilizedFlg")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(3)")
                        .HasColumnName("AUTH_TLI_UTILIZED_FLG");

                    b.Property<string>("AuthTraceAuditNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_TRACE_AUDIT_NUMBER");

                    b.Property<string>("AuthTransactionBranchId")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_TRANSACTION_BRANCH_ID");

                    b.Property<string>("AuthTxnMobileNo")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("AUTH_TXN_MOBILE_NO");

                    b.Property<string>("AuthTxnSource")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("AUTH_TXN_SOURCE");

                    b.Property<string>("AuthUserName")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(8)")
                        .HasColumnName("AUTH_USER_NAME");

                    b.Property<string>("AuthVasAmt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("AUTH_VAS_AMT");

                    b.Property<string>("DeliveryAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("DELIVERY_ADDRESS");

                    b.Property<decimal?>("SeqId")
                        .HasColumnType("NUMBER")
                        .HasColumnName("SEQ_ID");

                    b.ToView("VW_FINS_AUTHORIZATIONMASTER");
                });

            modelBuilder.Entity("projectMigration.Models.WsKeyconfigmultiservice", b =>
                {
                    b.Property<decimal?>("Addedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("ADDEDBY");

                    b.Property<DateTime?>("Addedon")
                        .HasColumnType("DATE")
                        .HasColumnName("ADDEDON");

                    b.Property<string>("Bankcode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(5)")
                        .HasColumnName("BANKCODE");

                    b.Property<string>("Dealercode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("DEALERCODE");

                    b.Property<string>("Emailid")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("EMAILID");

                    b.Property<string>("Encryptionkey")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(300)")
                        .HasColumnName("ENCRYPTIONKEY");

                    b.Property<string>("Ipaddress")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("IPADDRESS");

                    b.Property<decimal?>("Keyid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("KEYID");

                    b.Property<decimal?>("Keylength")
                        .HasColumnType("NUMBER")
                        .HasColumnName("KEYLENGTH");

                    b.Property<decimal?>("Modifiedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<DateTime?>("Modifiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON");

                    b.Property<string>("Modulecode")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("MODULECODE");

                    b.Property<string>("Thirdparty")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("THIRDPARTY");

                    b.HasIndex(new[] { "Bankcode", "Modulecode" }, "IDX_KEYCONFIG");

                    b.ToTable("WS_KEYCONFIGMULTISERVICE");
                });

            modelBuilder.Entity("projectMigration.Models.XpBflDealerBusinessProd", b =>
                {
                    b.Property<decimal>("Dealerbusiprodid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DEALERBUSIPRODID");

                    b.Property<string>("BusiProdCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(2)")
                        .HasColumnName("BUSI_PROD_CODE");

                    b.Property<string>("Businessproddesc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("BUSINESSPRODDESC");

                    b.Property<decimal>("Dealerid")
                        .HasColumnType("NUMBER")
                        .HasColumnName("DEALERID");

                    b.Property<string>("ModifedIp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("MODIFED_IP");

                    b.Property<decimal?>("Modifiedby")
                        .HasColumnType("NUMBER")
                        .HasColumnName("MODIFIEDBY");

                    b.Property<DateTime?>("Modifiedon")
                        .HasColumnType("DATE")
                        .HasColumnName("MODIFIEDON");

                    b.HasKey("Dealerbusiprodid")
                        .HasName("XP_BFL_DEALER_BUSINESS_PROD");

                    b.HasIndex(new[] { "Dealerid" }, "BFLDELBUSPROD_DEALRID");

                    b.ToTable("XP_BFL_DEALER_BUSINESS_PROD");
                });
#pragma warning restore 612, 618
        }
    }
}
